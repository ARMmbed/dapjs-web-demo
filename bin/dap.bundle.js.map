{"version":3,"sources":["webpack:///webpack/bootstrap f27ca4a39559fab55037","webpack:///./node_modules/dapjs/built/util.js","webpack:///./node_modules/dapjs/built/main.js","webpack:///./node_modules/dapjs-targets/bin/FlashTarget.js","webpack:///./src/main.ts","webpack:///./node_modules/dapjs/built/cortex_m.js","webpack:///./node_modules/dapjs/built/memory.js","webpack:///./node_modules/dapjs/built/device.js","webpack:///./node_modules/dapjs/built/dap.js","webpack:///./node_modules/dapjs-targets/bin/main.js","webpack:///./node_modules/dapjs-targets/bin/MbedTarget.js","webpack:///./node_modules/dapjs-targets/bin/K64F.js","webpack:///./node_modules/dapjs-targets/bin/microbit.js","webpack:///./node_modules/webhid/bin/hid.js","webpack:///./src/device_selector.ts","webpack:///./src/logger.ts"],"names":[],"mappings":"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,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,oC;;;;;;;AC5YA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,sDAAsD;AACnG;AACA,6BAA6B,EAAE,EAAE,EAAE,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B,EAAE,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,kC;;;;;;;AC5VA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oBAAoB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,kC;;;;;;;AC1RA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,+B;;;;;;;ACpNA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;ACPA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,sC;;;;;;;AC/LA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;ACzFA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;ACvDA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,k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","file":"dap.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f27ca4a39559fab55037","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar _this = this;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readUInt32LE = function (b, idx) {\n    return (b[idx] |\n        (b[idx + 1] << 8) |\n        (b[idx + 2] << 16) |\n        (b[idx + 3] << 24)) >>> 0;\n};\nexports.bufferConcat = function (bufs) {\n    var len = 0;\n    for (var _i = 0, bufs_1 = bufs; _i < bufs_1.length; _i++) {\n        var b = bufs_1[_i];\n        len += b.length;\n    }\n    var r = new Uint8Array(len);\n    len = 0;\n    for (var _a = 0, bufs_2 = bufs; _a < bufs_2.length; _a++) {\n        var b = bufs_2[_a];\n        r.set(b, len);\n        len += b.length;\n    }\n    return r;\n};\nexports.delay = function (t) { return __awaiter(_this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n        return [2 /*return*/, new Promise(function (resolve) {\n                setTimeout(resolve, t);\n            })];\n    });\n}); };\nexports.addInt32 = function (arr, val) {\n    if (!arr) {\n        arr = [];\n    }\n    arr.push(val & 0xff, (val >> 8) & 0xff, (val >> 16) & 0xff, (val >> 24) & 0xff);\n    return arr;\n};\nexports.hex = function (v) {\n    return \"0x\" + v.toString(16);\n};\nexports.rid = function (v) {\n    var m = [\n        \"DP_0x0\",\n        \"DP_0x4\",\n        \"DP_0x8\",\n        \"DP_0xC\",\n        \"AP_0x0\",\n        \"AP_0x4\",\n        \"AP_0x8\",\n        \"AP_0xC\",\n    ];\n    return m[v] || \"?\";\n};\nexports.bank = function (addr) {\n    var APBANKSEL = 0x000000f0;\n    return (addr & APBANKSEL) | (addr & 0xff000000);\n};\nexports.apReg = function (r, mode) {\n    var v = r | mode | 1 /* AP_ACC */;\n    return (4 + ((v & 0x0c) >> 2));\n};\nexports.bufToUint32Array = function (buf) {\n    exports.assert((buf.length & 3) === 0);\n    var r = [];\n    if (!buf.length) {\n        return r;\n    }\n    r[buf.length / 4 - 1] = 0;\n    for (var i = 0; i < r.length; ++i) {\n        r[i] = exports.readUInt32LE(buf, i << 2);\n    }\n    return r;\n};\nexports.assert = function (cond) {\n    if (!cond) {\n        throw new Error(\"assertion failed\");\n    }\n};\nexports.regRequest = function (regId, isWrite) {\n    if (isWrite === void 0) { isWrite = false; }\n    var request = !isWrite ? 2 /* READ */ : 0 /* WRITE */;\n    if (regId < 4) {\n        request |= 0 /* DP_ACC */;\n    }\n    else {\n        request |= 1 /* AP_ACC */;\n    }\n    request |= (regId & 3) << 2;\n    return request;\n};\nexports.hexBytes = function (bytes) {\n    var chk = 0;\n    var r = \":\";\n    bytes.forEach(function (b) { return chk += b; });\n    bytes.push((-chk) & 0xff);\n    bytes.forEach(function (b) { return r += (\"0\" + b.toString(16)).slice(-2); });\n    return r.toUpperCase();\n};\n//# sourceMappingURL=util.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dapjs/built/util.js\n// module id = 0\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cortex_m_1 = require(\"./cortex_m\");\nexports.CortexM = cortex_m_1.CortexM;\nexports.CoreNames = cortex_m_1.CoreNames;\nexports.ISANames = cortex_m_1.ISANames;\nvar device_1 = require(\"./device\");\nexports.Device = device_1.Device;\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dapjs/built/main.js\n// module id = 1\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dapjs_1 = require(\"dapjs\");\nvar FlashTarget = (function (_super) {\n    __extends(FlashTarget, _super);\n    function FlashTarget() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FlashTarget;\n}(dapjs_1.CortexM));\nexports.FlashTarget = FlashTarget;\n//# sourceMappingURL=FlashTarget.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dapjs-targets/bin/FlashTarget.js\n// module id = 2\n// module chunks = 0","import {CoreNames, CortexM, CortexReg, Device, ISANames} from \"dapjs\";\nimport {FlashAlgos, FlashTarget, MbedTarget} from \"dapjs-targets\";\nimport HID from \"webhid\";\n\nimport {PlatformSelector} from \"./device_selector\";\nimport HTMLLogger from \"./logger\";\n\ninterface IMachineState {\n    registers: number[];\n}\n\nconst arrToString = (arr: number[]) => {\n    let r = \"\";\n    for (let i = 0; i < arr.length; ++i) {\n        r += (\"0000\" + i).slice(-4) + \": \" + (\"00000000\" + (arr[i] >>> 0).toString(16)).slice(-8);\n\n        if (i !== arr.length - 1) {\n            r += \"\\n\";\n        }\n    }\n    return r;\n};\n\nconst machineStateToString = (s: IMachineState) => {\n    return \"REGS:\\n\" + arrToString(s.registers);\n};\n\nclass DAPDemo {\n    public target: FlashTarget;\n\n    private readonly selector: PlatformSelector;\n    private device: USBDevice;\n    private hid: HID;\n    private dapDevice: Device;\n    private deviceCode: string;\n\n    private readonly chooseButton: HTMLButtonElement;\n    private readonly connectButton: HTMLButtonElement;\n    private readonly flashButton: HTMLButtonElement;\n    private readonly eraseButton: HTMLButtonElement;\n    private readonly printRegistersButton: HTMLButtonElement;\n    private readonly stepButton: HTMLButtonElement;\n    private readonly haltButton: HTMLButtonElement;\n    private readonly resumeButton: HTMLButtonElement;\n    private readonly initButton: HTMLButtonElement;\n\n    private readonly logger: HTMLLogger;\n\n    constructor(logger: HTMLLogger) {\n        this.selector = new PlatformSelector(\"platform-chooser\", \"platform-detected\");\n\n        this.chooseButton = document.getElementById(\"choose\") as HTMLButtonElement;\n        this.connectButton = document.getElementById(\"connect\") as HTMLButtonElement;\n        this.flashButton = document.getElementById(\"flash\") as HTMLButtonElement;\n        this.initButton = document.getElementById(\"flash-init\") as HTMLButtonElement;\n        this.eraseButton = document.getElementById(\"flash-erase\") as HTMLButtonElement;\n        this.printRegistersButton = document.getElementById(\"registers\") as HTMLButtonElement;\n        this.stepButton = document.getElementById(\"step-instruction\") as HTMLButtonElement;\n        this.haltButton = document.getElementById(\"halt\") as HTMLButtonElement;\n        this.resumeButton = document.getElementById(\"resume\") as HTMLButtonElement;\n\n        this.chooseButton.onclick = this.choose;\n        this.connectButton.onclick = this.connect;\n        this.flashButton.onclick = this.flash;\n        this.eraseButton.onclick = this.erase;\n        this.printRegistersButton.onclick = this.printRegisters;\n        this.stepButton.onclick = this.step;\n        this.haltButton.onclick = this.halt;\n        this.resumeButton.onclick = this.resume;\n        this.initButton.onclick = this.flashInit;\n\n        this.logger = logger;\n    }\n\n    /**\n     * Define `choose` as ES6 arrow function so that `this` is bound to the instance of DAPDemo, rather than bound to\n     * the source of the click event.\n     */\n    private choose = async () => {\n        this.device = await navigator.usb.requestDevice({ filters: [{vendorId: 0x0d28}]});\n        this.deviceCode = this.device.serialNumber.slice(0, 4);\n\n        const info = await this.selector.lookupDevice(this.deviceCode);\n\n        this.selector.show(info);\n        this.selector.enable();\n\n        this.chooseButton.disabled = true;\n        this.connectButton.disabled = false;\n    }\n\n    private flashInit = async () => {\n        this.log(\"Running FlashInit.\");\n\n        await this.target.halt();\n        await this.target.flashInit();\n    }\n\n    /**\n     * Define `connect` as ES6 arrow function so that `this` is bound to the instance of DAPDemo, rather than bound to\n     * the source of the click event.\n     */\n    private connect = async () => {\n        this.hid = new HID(this.device);\n\n        this.log(\"Opening device.\");\n\n        // open hid device\n        await this.hid.open();\n\n        this.log(\"Device opened.\");\n\n        this.dapDevice = new Device(this.hid);\n        this.target = new MbedTarget(this.dapDevice, FlashAlgos.get(this.deviceCode));\n\n        this.log(\"Initialising device.\");\n\n        await this.target.init();\n\n        this.log(\"Halting target.\");\n\n        await this.target.halt();\n\n        this.log(\"Target halted.\");\n\n        const [imp, isa, type] = await this.target.readCoreType();\n        this.log(`Connected to an ARM ${CoreNames.get(type)} (${ISANames.get(isa)})`);\n\n        this.selector.disable();\n        this.connectButton.disabled = true;\n\n        const elements = Array.from(document.querySelectorAll(\".when-connected\"));\n\n        for (const elem of elements) {\n            (elem as HTMLButtonElement).disabled = false;\n        }\n    }\n\n    private flash = async () => {\n        this.clearLog();\n\n        this.log(\"Preparing to flash device.\");\n        await this.target.halt();\n        // await this.target.init();\n        await this.target.flashInit();\n\n        this.log(\"Halted and initialised device.\");\n\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", \"blinky-red.bin\", true);\n        xhr.responseType = \"arraybuffer\";\n\n        xhr.onload = async (e: any) => {\n          const array = Array.from(new Uint32Array(xhr.response));\n\n          this.log(`Binary file ${array.length} words long`);\n\n          // Push binary to board\n          await this.target.flash(array);\n\n          this.log(`Successfully flashed binary.`);\n        };\n\n        xhr.send();\n    }\n\n    private halt = async () => {\n        await this.target.halt();\n        this.log(\"Halted.\");\n    }\n\n    private resume = async () => {\n        await this.target.resume();\n        this.log(\"Resumed.\");\n    }\n\n    private erase = async () => {\n        // Erase flash\n        this.clearLog();\n        await this.target.halt();\n\n        this.log(\"Running flashInit\");\n\n        const r0 = await this.target.flashInit();\n        this.log(`flashInit returned 0x${r0.toString(16)}`);\n\n        // const r1 = await this.target.eraseChip();\n        // this.log(`flashErase returned 0x${r1.toString(16)}`);\n    }\n\n    private log(s: string) {\n        this.logger.log(\"[demo] \" + s);\n    }\n\n    private clearLog() {\n        this.logger.clear();\n    }\n\n    private printRegisters = async () => {\n        const halt = false;\n\n        await this.target.halt();\n        const st = await this.snapshotMachineState();\n\n        this.clearLog();\n        this.log(machineStateToString(st));\n    }\n\n    private step = async () => {\n        await this.target.debug.step();\n        const st = await this.snapshotMachineState();\n\n        this.clearLog();\n        this.log(machineStateToString(st));\n    }\n\n    /**\n     * Snapshot the current state of the CPU. Reads all general-purpose registers, and returns them in an array.\n     */\n    private async snapshotMachineState() {\n        const state: IMachineState = {\n            registers: [],\n        };\n\n        for (let i = 0; i < 16; i++) {\n            state.registers[i] = await this.target.readCoreRegister(i);\n        }\n\n        return state;\n    }\n}\n\nwindow.onload = () => {\n    const logger = new HTMLLogger(\"#trace\");\n    const demo = new DAPDemo(logger);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar memory_1 = require(\"./memory\");\nvar util_1 = require(\"./util\");\nexports.CPUID_IMPLEMENTER_MASK = 0xff000000;\nexports.CPUID_IMPLEMENTER_POS = 24;\nexports.CPUID_VARIANT_MASK = 0x00f00000;\nexports.CPUID_VARIANT_POS = 20;\nexports.CPUID_ARCHITECTURE_MASK = 0x000f0000;\nexports.CPUID_ARCHITECTURE_POS = 16;\nexports.CPUID_PARTNO_MASK = 0x0000fff0;\nexports.CPUID_PARTNO_POS = 4;\nexports.CPUID_REVISION_MASK = 0x0000000f;\nexports.CPUID_REVISION_POS = 0;\nexports.ISANames = new Map();\nexports.ISANames.set(12 /* ARMv6M */, \"ARMv6M\");\nexports.ISANames.set(15 /* ARMv7M */, \"ARMv7M\");\nexports.CoreNames = new Map();\nexports.CoreNames.set(3104 /* CortexM0 */, \"Cortex-M0\");\nexports.CoreNames.set(3105 /* CortexM1 */, \"Cortex-M1\");\nexports.CoreNames.set(3107 /* CortexM3 */, \"Cortex-M3\");\nexports.CoreNames.set(3108 /* CortexM4 */, \"Cortex-M4\");\nexports.CoreNames.set(3168 /* CortexM0p */, \"Cortex-M0+\");\n/**\n * Abstraction of an ARM Cortex M CPU from a programmer's perspective. Provides functionality\n * for setting breakpoints, reading general-purpose registers, reading from memory and stopping\n * and starting the CPU.\n */\nvar CortexM = (function () {\n    function CortexM(device) {\n        this.dev = device;\n        this.memory = new memory_1.Memory(device);\n    }\n    /**\n     * Initialise the debug access port on the device, and read the device type.\n     */\n    CortexM.prototype.init = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.dev.init()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.debug.setupFpb()];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.readCoreType()];\n                    case 3:\n                        _a.sent();\n                        console.debug(\"Initialized.\");\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Read the current state of the CPU.\n     *\n     * @returns A member of the `CoreState` enum corresponding to the current status of the CPU.\n     */\n    CortexM.prototype.getState = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var dhcsr, newDHCSR;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.memory.read32(3758157296 /* DHCSR */)];\n                    case 1:\n                        dhcsr = _a.sent();\n                        if (!(dhcsr & 33554432 /* S_RESET_ST */)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.memory.read32(3758157296 /* DHCSR */)];\n                    case 2:\n                        newDHCSR = _a.sent();\n                        if (newDHCSR & 33554432 /* S_RESET_ST */ && !(newDHCSR & 16777216 /* S_RETIRE_ST */)) {\n                            return [2 /*return*/, 0 /* TARGET_RESET */];\n                        }\n                        _a.label = 3;\n                    case 3:\n                        if (dhcsr & 524288 /* S_LOCKUP */) {\n                            return [2 /*return*/, 1 /* TARGET_LOCKUP */];\n                        }\n                        else if (dhcsr & 262144 /* S_SLEEP */) {\n                            return [2 /*return*/, 2 /* TARGET_SLEEPING */];\n                        }\n                        else if (dhcsr & 131072 /* S_HALT */) {\n                            return [2 /*return*/, 3 /* TARGET_HALTED */];\n                        }\n                        else {\n                            return [2 /*return*/, 4 /* TARGET_RUNNING */];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Read the CPUID register from the CPU, and interpret its meaning in terms of implementer,\n     * architecture and core type.\n     */\n    CortexM.prototype.readCoreType = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var cpuid, implementer, arch, coreType;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.memory.read32(3758157056 /* CPUID */)];\n                    case 1:\n                        cpuid = _a.sent();\n                        implementer = ((cpuid & exports.CPUID_IMPLEMENTER_MASK) >> exports.CPUID_IMPLEMENTER_POS);\n                        arch = ((cpuid & exports.CPUID_ARCHITECTURE_MASK) >> exports.CPUID_ARCHITECTURE_POS);\n                        coreType = ((cpuid & exports.CPUID_PARTNO_MASK) >> exports.CPUID_PARTNO_POS);\n                        console.debug(\"Found an ARM \" + exports.CoreNames.get(coreType));\n                        return [2 /*return*/, [implementer, arch, coreType]];\n                }\n            });\n        });\n    };\n    /**\n     * Read a core register from the CPU (e.g. r0...r15, pc, sp, lr, s0...)\n     *\n     * @param no Member of the `CortexReg` enum - an ARM Cortex CPU general-purpose register.\n     */\n    CortexM.prototype.readCoreRegister = function (no) {\n        return __awaiter(this, void 0, void 0, function () {\n            var v;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.memory.write32(3758157300 /* DCRSR */, no)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.memory.read32(3758157296 /* DHCSR */)];\n                    case 2:\n                        v = _a.sent();\n                        util_1.assert(v & 65536 /* S_REGRDY */);\n                        return [4 /*yield*/, this.memory.read32(3758157304 /* DCRDR */)];\n                    case 3: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Write a 32-bit word to the specified CPU general-purpose register.\n     *\n     * @param no Member of the `CortexReg` enum - an ARM Cortex CPU general-purpose register.\n     * @param val Value to be written.\n     */\n    CortexM.prototype.writeCoreRegister = function (no, val) {\n        return __awaiter(this, void 0, void 0, function () {\n            var v;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.memory.write32(3758157304 /* DCRDR */, val)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.memory.write32(3758157300 /* DCRSR */, no | 65536 /* DCRSR_REGWnR */)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.memory.read32(3758157296 /* DHCSR */)];\n                    case 3:\n                        v = _a.sent();\n                        util_1.assert(v & 65536 /* S_REGRDY */);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Halt the CPU core.\n     */\n    CortexM.prototype.halt = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.memory.write32(3758157296 /* DHCSR */, -1604386816 /* DBGKEY */ | 1 /* C_DEBUGEN */ | 2 /* C_HALT */)];\n            });\n        });\n    };\n    /**\n     * Resume the CPU core.\n     */\n    CortexM.prototype.resume = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.isHalted()];\n                    case 1:\n                        if (!_a.sent()) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.memory.write32(3758157104 /* DFSR */, 4 /* DFSR_DWTTRAP */ | 2 /* DFSR_BKPT */ | 1 /* DFSR_HALTED */)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.debug.enable()];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Find out whether the CPU is halted.\n     */\n    CortexM.prototype.isHalted = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var s;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.status()];\n                    case 1:\n                        s = _a.sent();\n                        return [2 /*return*/, s.isHalted];\n                }\n            });\n        });\n    };\n    /**\n     * Read the current status of the CPU.\n     *\n     * @returns Object containing the contents of the `DHCSR` register, the `DFSR` register, and a boolean value\n     * stating the current halted state of the CPU.\n     */\n    CortexM.prototype.status = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var dhcsr, dfsr;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.memory.read32(3758157296 /* DHCSR */)];\n                    case 1:\n                        dhcsr = _a.sent();\n                        return [4 /*yield*/, this.memory.read32(3758157104 /* DFSR */)];\n                    case 2:\n                        dfsr = _a.sent();\n                        return [2 /*return*/, {\n                                dfsr: dfsr,\n                                dhscr: dhcsr,\n                                isHalted: !!(dhcsr & 131072 /* S_HALT */),\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Reset the CPU core. This currently does a software reset - it is also technically possible to perform a 'hard'\n     * reset using the reset pin from the debugger.\n     */\n    CortexM.prototype.reset = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var dhcsr;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.memory.write32(3758157068 /* NVIC_AIRCR */, 100270080 /* NVIC_AIRCR_VECTKEY */ | 4 /* NVIC_AIRCR_SYSRESETREQ */)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.memory.read32(3758157296 /* DHCSR */)];\n                    case 2:\n                        dhcsr = _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        if (!((dhcsr & 33554432 /* S_RESET_ST */) !== 0)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.memory.read32(3758157296 /* DHCSR */)];\n                    case 4:\n                        dhcsr = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Run specified machine code natively on the device. Assumes usual C calling conventions\n     * - returns the value of r0 once the program has terminated. The program _must_ terminate\n     * in order for this function to return. This can be achieved by placing a `bkpt`\n     * instruction at the end of the function.\n     *\n     * **FIXME**: currently causes a hard fault when the core is resumed after successfully uploading\n     * the blob to memory and setting core registers.\n     *\n     * @param code array containing the machine code (32-bit words).\n     * @param address memory address at which to place the code.\n     * @param pc initial value of the program counter.\n     * @param lr initial value of the link register.\n     * @param sp initial value of the stack pointer.\n     * @param upload should we upload the code before running it.\n     * @param args set registers r0...rn before running code\n     *\n     * @returns A promise for the value of r0 on completion of the function call.\n     */\n    CortexM.prototype.runCode = function (code, address, pc, lr, sp, upload) {\n        var args = [];\n        for (var _i = 6; _i < arguments.length; _i++) {\n            args[_i - 6] = arguments[_i];\n        }\n        return __awaiter(this, void 0, void 0, function () {\n            var i;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: \n                    // Halt the core\n                    return [4 /*yield*/, this.halt()];\n                    case 1:\n                        // Halt the core\n                        _a.sent();\n                        // Point the program counter to the start of the program\n                        return [4 /*yield*/, this.writeCoreRegister(15 /* PC */, pc)];\n                    case 2:\n                        // Point the program counter to the start of the program\n                        _a.sent();\n                        return [4 /*yield*/, this.writeCoreRegister(14 /* LR */, lr)];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, this.writeCoreRegister(13 /* SP */, sp)];\n                    case 4:\n                        _a.sent();\n                        i = 0;\n                        _a.label = 5;\n                    case 5:\n                        if (!(i < args.length)) return [3 /*break*/, 8];\n                        return [4 /*yield*/, this.writeCoreRegister(i, args[i])];\n                    case 6:\n                        _a.sent();\n                        _a.label = 7;\n                    case 7:\n                        i++;\n                        return [3 /*break*/, 5];\n                    case 8:\n                        if (!upload) return [3 /*break*/, 10];\n                        return [4 /*yield*/, this.memory.writeBlock(address, code)];\n                    case 9:\n                        _a.sent();\n                        _a.label = 10;\n                    case 10: \n                    // Run the program\n                    return [4 /*yield*/, this.resume()];\n                    case 11:\n                        // Run the program\n                        _a.sent();\n                        return [4 /*yield*/, this.waitForHalt()];\n                    case 12:\n                        _a.sent();\n                        return [4 /*yield*/, this.readCoreRegister(0 /* R0 */)];\n                    case 13: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Spin until the chip has halted.\n     */\n    CortexM.prototype.waitForHalt = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.isHalted()];\n                    case 1:\n                        if (!!(_a.sent())) return [3 /*break*/, 2];\n                        return [3 /*break*/, 0];\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return CortexM;\n}());\nexports.CortexM = CortexM;\n//# sourceMappingURL=cortex_m.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dapjs/built/cortex_m.js\n// module id = 4\n// module chunks = 0","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util\");\nvar Memory = (function () {\n    function Memory(dev) {\n        this.dev = dev;\n    }\n    /**\n     * Write a 32-bit word to the specified (word-aligned) memory address.\n     *\n     * @param addr Memory address to write to\n     * @param data Data to write (values above 2**32 will be truncated)\n     */\n    Memory.prototype.write32 = function (addr, data) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.dev.writeAp(0 /* CSW */, 587202640 /* CSW_VALUE */ | 2 /* CSW_SIZE32 */)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.dev.writeAp(4 /* TAR */, addr)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.dev.writeAp(12 /* DRW */, data)];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Write a 16-bit word to the specified (half word-aligned) memory address.\n     *\n     * @param addr Memory address to write to\n     * @param data Data to write (values above 2**16 will be truncated)\n     */\n    Memory.prototype.write16 = function (addr, data) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.dev.writeAp(0 /* CSW */, 587202640 /* CSW_VALUE */ | 1 /* CSW_SIZE16 */)];\n                    case 1:\n                        _a.sent();\n                        data = data << ((addr & 0x02) << 3);\n                        return [4 /*yield*/, this.dev.writeAp(4 /* TAR */, addr)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.dev.writeAp(12 /* DRW */, data)];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Read a 32-bit word from the specified (word-aligned) memory address.\n     *\n     * @param addr Memory address to read from.\n     */\n    Memory.prototype.read32 = function (addr) {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.dev.writeAp(0 /* CSW */, 587202640 /* CSW_VALUE */ | 2 /* CSW_SIZE32 */)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.dev.writeAp(4 /* TAR */, addr)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 5, , 8]);\n                        return [4 /*yield*/, this.dev.readAp(12 /* DRW */)];\n                    case 4: return [2 /*return*/, _a.sent()];\n                    case 5:\n                        e_1 = _a.sent();\n                        // transfer wait, try again.\n                        return [4 /*yield*/, util_1.delay(100)];\n                    case 6:\n                        // transfer wait, try again.\n                        _a.sent();\n                        return [4 /*yield*/, this.read32(addr)];\n                    case 7: return [2 /*return*/, _a.sent()];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Read a 16-bit word from the specified (half word-aligned) memory address.\n     *\n     * @param addr Memory address to read from.\n     */\n    Memory.prototype.read16 = function (addr) {\n        return __awaiter(this, void 0, void 0, function () {\n            var e_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.dev.writeAp(0 /* CSW */, 587202640 /* CSW_VALUE */ | 1 /* CSW_SIZE16 */)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.dev.writeAp(4 /* TAR */, addr)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 5, , 8]);\n                        return [4 /*yield*/, this.dev.readAp(12 /* DRW */)];\n                    case 4: return [2 /*return*/, _a.sent()];\n                    case 5:\n                        e_2 = _a.sent();\n                        // transfer wait, try again.\n                        return [4 /*yield*/, util_1.delay(100)];\n                    case 6:\n                        // transfer wait, try again.\n                        _a.sent();\n                        return [4 /*yield*/, this.read32(addr)];\n                    case 7: return [2 /*return*/, _a.sent()];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Reads a block of memory from the specified memory address.\n     *\n     * @param addr Address to read from\n     * @param words Number of words to read\n     * @param pageSize Memory page size\n     */\n    Memory.prototype.readBlock = function (addr, words, pageSize) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var funs, bufs, end, ptr, _loop_1, _i, funs_1, f, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        funs = [function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                                return [2 /*return*/, Promise.resolve()];\n                            }); }); }];\n                        bufs = [];\n                        end = addr + words * 4;\n                        ptr = addr;\n                        _loop_1 = function () {\n                            var nextptr = ptr + pageSize;\n                            if (ptr === addr) {\n                                nextptr &= ~(pageSize - 1);\n                            }\n                            var len = Math.min(nextptr - ptr, end - ptr);\n                            var ptr0 = ptr;\n                            util_1.assert((len & 3) === 0);\n                            funs.push(function () { return __awaiter(_this, void 0, void 0, function () {\n                                var _a, _b;\n                                return __generator(this, function (_c) {\n                                    switch (_c.label) {\n                                        case 0:\n                                            _b = (_a = bufs).push;\n                                            return [4 /*yield*/, this.readBlockCore(ptr0, len >> 2)];\n                                        case 1:\n                                            _b.apply(_a, [_c.sent()]);\n                                            return [2 /*return*/];\n                                    }\n                                });\n                            }); });\n                            ptr = nextptr;\n                        };\n                        while (ptr < end) {\n                            _loop_1();\n                        }\n                        _i = 0, funs_1 = funs;\n                        _a.label = 1;\n                    case 1:\n                        if (!(_i < funs_1.length)) return [3 /*break*/, 4];\n                        f = funs_1[_i];\n                        return [4 /*yield*/, f()];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4: return [4 /*yield*/, util_1.bufferConcat(bufs)];\n                    case 5:\n                        result = _a.sent();\n                        return [2 /*return*/, result.slice(0, words * 4)];\n                }\n            });\n        });\n    };\n    /**\n     * Write a block of memory to the specified memory address.\n     *\n     * @param addr Memory address to write to.\n     * @param words Array of 32-bit words to write to memory.\n     */\n    Memory.prototype.writeBlock = function (addr, words) {\n        return __awaiter(this, void 0, void 0, function () {\n            var blSz, i;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (words.length === 0) {\n                            return [2 /*return*/];\n                        }\n                        console.debug(\"write block: 0x\" + addr.toString(16) + \" \" + words.length + \" len\");\n                        if (!(1 > 0)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.writeBlockCore(addr, words)];\n                    case 1:\n                        _a.sent();\n                        console.debug(\"written\");\n                        return [2 /*return*/];\n                    case 2:\n                        blSz = 10;\n                        i = 0;\n                        _a.label = 3;\n                    case 3:\n                        if (!(i < Math.ceil(words.length / blSz))) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.writeBlockCore(addr + i * blSz * 4, words.slice(i * blSz, i * blSz + blSz))];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5:\n                        i++;\n                        return [3 /*break*/, 3];\n                    case 6:\n                        console.debug(\"written\");\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Memory.prototype.readBlockCore = function (addr, words) {\n        return __awaiter(this, void 0, void 0, function () {\n            var lastSize, blocks, i, b;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.dev.writeAp(0 /* CSW */, 587202640 /* CSW_VALUE */ | 2 /* CSW_SIZE32 */)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.dev.writeAp(4 /* TAR */, addr)];\n                    case 2:\n                        _a.sent();\n                        lastSize = words % 15;\n                        if (lastSize === 0) {\n                            lastSize = 15;\n                        }\n                        blocks = [];\n                        i = 0;\n                        _a.label = 3;\n                    case 3:\n                        if (!(i < Math.ceil(words / 15))) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.dev.readRegRepeat(util_1.apReg(12 /* DRW */, 2 /* READ */), i === blocks.length - 1 ? lastSize : 15)];\n                    case 4:\n                        b = _a.sent();\n                        blocks.push(b);\n                        _a.label = 5;\n                    case 5:\n                        i++;\n                        return [3 /*break*/, 3];\n                    case 6: return [2 /*return*/, util_1.bufferConcat(blocks)];\n                }\n            });\n        });\n    };\n    Memory.prototype.writeBlockCore = function (addr, words) {\n        return __awaiter(this, void 0, void 0, function () {\n            var blSz, reg, i, e_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 7, , 12]);\n                        return [4 /*yield*/, this.dev.writeAp(0 /* CSW */, 587202640 /* CSW_VALUE */ | 2 /* CSW_SIZE32 */)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.dev.writeAp(4 /* TAR */, addr)];\n                    case 2:\n                        _a.sent();\n                        blSz = 12;\n                        reg = util_1.apReg(12 /* DRW */, 0 /* WRITE */);\n                        i = 0;\n                        _a.label = 3;\n                    case 3:\n                        if (!(i < Math.ceil(words.length / blSz))) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.dev.writeRegRepeat(reg, words.slice(i * blSz, i * blSz + blSz))];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5:\n                        i++;\n                        return [3 /*break*/, 3];\n                    case 6: return [3 /*break*/, 12];\n                    case 7:\n                        e_3 = _a.sent();\n                        if (!e_3.dapWait) return [3 /*break*/, 10];\n                        console.debug(\"transfer wait, write block\");\n                        return [4 /*yield*/, util_1.delay(100)];\n                    case 8:\n                        _a.sent();\n                        return [4 /*yield*/, this.writeBlockCore(addr, words)];\n                    case 9: return [2 /*return*/, _a.sent()];\n                    case 10: throw e_3;\n                    case 11: return [3 /*break*/, 12];\n                    case 12: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return Memory;\n}());\nexports.Memory = Memory;\n//# sourceMappingURL=memory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dapjs/built/memory.js\n// module id = 5\n// module chunks = 0","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dap_1 = require(\"./dap\");\nvar util_1 = require(\"./util\");\nvar Device = (function () {\n    function Device(device) {\n        this.device = device;\n        this.dap = new dap_1.Dap(device);\n    }\n    Device.prototype.reconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.clearCaches();\n                        return [4 /*yield*/, this.dap.disconnect()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, util_1.delay(100)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.init()];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Device.prototype.init = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var n, m, v;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.dap.connect()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.readDp(0 /* IDCODE */)];\n                    case 2:\n                        n = _a.sent();\n                        this.idcode = n;\n                        return [4 /*yield*/, this.writeReg(0 /* DP_0x0 */, 1 << 2)];\n                    case 3:\n                        _a.sent(); // clear sticky error\n                        return [4 /*yield*/, this.writeDp(2 /* SELECT */, 0)];\n                    case 4:\n                        _a.sent();\n                        return [4 /*yield*/, this.writeDp(1 /* CTRL_STAT */, 1073741824 /* CSYSPWRUPREQ */ | 268435456 /* CDBGPWRUPREQ */)];\n                    case 5:\n                        _a.sent();\n                        m = 536870912 /* CDBGPWRUPACK */ | 2147483648 /* CSYSPWRUPACK */;\n                        return [4 /*yield*/, this.readDp(1 /* CTRL_STAT */)];\n                    case 6:\n                        v = _a.sent();\n                        _a.label = 7;\n                    case 7:\n                        if (!((v & m) !== m)) return [3 /*break*/, 9];\n                        return [4 /*yield*/, this.readDp(1 /* CTRL_STAT */)];\n                    case 8:\n                        v = _a.sent();\n                        return [3 /*break*/, 7];\n                    case 9: return [4 /*yield*/, this.writeDp(1 /* CTRL_STAT */, (1073741824 /* CSYSPWRUPREQ */ |\n                            268435456 /* CDBGPWRUPREQ */ |\n                            0 /* TRNNORMAL */ |\n                            3840 /* MASKLANE */))];\n                    case 10:\n                        _a.sent();\n                        return [4 /*yield*/, this.writeDp(2 /* SELECT */, 0)];\n                    case 11:\n                        _a.sent();\n                        return [4 /*yield*/, this.readAp(252 /* IDR */)];\n                    case 12:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Device.prototype.writeReg = function (regId, val) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.regOp(regId, val)];\n            });\n        });\n    };\n    Device.prototype.readReg = function (regId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var buf, v;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.regOp(regId, null)];\n                    case 1:\n                        buf = _a.sent();\n                        v = util_1.readUInt32LE(buf, 3);\n                        return [2 /*return*/, v];\n                }\n            });\n        });\n    };\n    Device.prototype.readDp = function (addr) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.readReg(addr)];\n            });\n        });\n    };\n    Device.prototype.readAp = function (addr) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.writeDp(2 /* SELECT */, util_1.bank(addr))];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.readReg(util_1.apReg(addr, 2 /* READ */))];\n                    case 2: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    Device.prototype.writeDp = function (addr, data) {\n        if (addr === 2 /* SELECT */) {\n            if (data === this.dpSelect) {\n                return Promise.resolve();\n            }\n            this.dpSelect = data;\n        }\n        return this.writeReg(addr, data);\n    };\n    Device.prototype.writeAp = function (addr, data) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.writeDp(2 /* SELECT */, util_1.bank(addr))];\n                    case 1:\n                        _a.sent();\n                        if (addr === 0 /* CSW */) {\n                            if (data === this.csw) {\n                                return [2 /*return*/, Promise.resolve()];\n                            }\n                            this.csw = data;\n                        }\n                        return [4 /*yield*/, this.writeReg(util_1.apReg(addr, 0 /* WRITE */), data)];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Device.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.device.close()];\n            });\n        });\n    };\n    Device.prototype.readRegRepeat = function (regId, cnt) {\n        return __awaiter(this, void 0, void 0, function () {\n            var request, sendargs, i, buf;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        util_1.assert(cnt <= 15);\n                        request = util_1.regRequest(regId);\n                        sendargs = [0, cnt];\n                        for (i = 0; i < cnt; ++i) {\n                            sendargs.push(request);\n                        }\n                        return [4 /*yield*/, this.dap.cmdNums(5 /* DAP_TRANSFER */, sendargs)];\n                    case 1:\n                        buf = _a.sent();\n                        if (buf[1] !== cnt) {\n                            throw new Error((\"(many) Bad #trans \" + buf[1]));\n                        }\n                        else if (buf[2] !== 1) {\n                            throw new Error((\"(many) Bad transfer status \" + buf[2]));\n                        }\n                        return [2 /*return*/, buf.slice(3, 3 + cnt * 4)];\n                }\n            });\n        });\n    };\n    Device.prototype.writeRegRepeat = function (regId, data) {\n        return __awaiter(this, void 0, void 0, function () {\n            var request, sendargs, _i, data_1, d, buf;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        util_1.assert(data.length <= 15);\n                        request = util_1.regRequest(regId, true);\n                        sendargs = [0, data.length];\n                        for (_i = 0, data_1 = data; _i < data_1.length; _i++) {\n                            d = data_1[_i];\n                            sendargs.push(request);\n                            util_1.addInt32(sendargs, d);\n                        }\n                        return [4 /*yield*/, this.dap.cmdNums(5 /* DAP_TRANSFER */, sendargs)];\n                    case 1:\n                        buf = _a.sent();\n                        if (buf[2] !== 1) {\n                            throw new Error((\"(many-wr) Bad transfer status \" + buf[2]));\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Device.prototype.clearCaches = function () {\n        delete this.dpSelect;\n        delete this.csw;\n        for (var _i = 0, _a = this.breakpoints; _i < _a.length; _i++) {\n            var b = _a[_i];\n            delete b.lastWritten;\n        }\n    };\n    Device.prototype.regOp = function (regId, val) {\n        return __awaiter(this, void 0, void 0, function () {\n            var request, sendargs, buf;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        request = util_1.regRequest(regId, val !== null);\n                        sendargs = [0, 1, request];\n                        if (val !== null) {\n                            util_1.addInt32(sendargs, val);\n                        }\n                        return [4 /*yield*/, this.dap.cmdNums(5 /* DAP_TRANSFER */, sendargs)];\n                    case 1:\n                        buf = _a.sent();\n                        if (buf[1] !== 1) {\n                            console.error(\"Make sure you have initialised the DAP connection.\");\n                            throw new Error((\"Bad #trans \" + buf[1]));\n                        }\n                        else if (buf[2] !== 1) {\n                            if (buf[2] === 2) {\n                                throw new Error((\"Transfer wait\"));\n                            }\n                            throw new Error((\"Bad transfer status \" + buf[2]));\n                        }\n                        return [2 /*return*/, buf];\n                }\n            });\n        });\n    };\n    return Device;\n}());\nexports.Device = Device;\n//# sourceMappingURL=device.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dapjs/built/device.js\n// module id = 6\n// module chunks = 0","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util\");\nvar Dap = (function () {\n    function Dap(hid) {\n        this.maxSent = 1;\n        this.hid = hid;\n    }\n    Dap.prototype.resetTarget = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.cmdNums(10 /* DAP_RESET_TARGET */, [])];\n            });\n        });\n    };\n    Dap.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.cmdNums(3 /* DAP_DISCONNECT */, [])];\n            });\n        });\n    };\n    Dap.prototype.cmdNums = function (op, data) {\n        return __awaiter(this, void 0, void 0, function () {\n            var buf;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        data.unshift(op);\n                        return [4 /*yield*/, this.send(data)];\n                    case 1:\n                        buf = _a.sent();\n                        if (buf[0] !== op) {\n                            throw new Error(\"Bad response for \" + op + \" -> \" + buf[0]);\n                        }\n                        switch (op) {\n                            case 2 /* DAP_CONNECT */:\n                            case 0 /* DAP_INFO */:\n                            case 5 /* DAP_TRANSFER */:\n                                break;\n                            default:\n                                if (buf[1] !== 0) {\n                                    throw new Error(\"Bad status for \" + op + \" -> \" + buf[1]);\n                                }\n                        }\n                        return [2 /*return*/, buf];\n                }\n            });\n        });\n    };\n    Dap.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var v, buf;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        console.log(\"Connecting...\");\n                        return [4 /*yield*/, this.info(254 /* PACKET_COUNT */)];\n                    case 1:\n                        v = _a.sent();\n                        if (v) {\n                            this.maxSent = v;\n                        }\n                        else {\n                            throw new Error(\"DAP_INFO returned invalid packet count.\");\n                        }\n                        return [4 /*yield*/, this.cmdNums(17 /* DAP_SWJ_CLOCK */, util_1.addInt32(null, 1000000))];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.cmdNums(2 /* DAP_CONNECT */, [0])];\n                    case 3:\n                        buf = _a.sent();\n                        if (buf[1] !== 1) {\n                            throw new Error(\"SWD mode not enabled.\");\n                        }\n                        return [4 /*yield*/, this.cmdNums(17 /* DAP_SWJ_CLOCK */, util_1.addInt32(null, 1000000))];\n                    case 4:\n                        _a.sent();\n                        return [4 /*yield*/, this.cmdNums(4 /* DAP_TRANSFER_CONFIGURE */, [0, 0x50, 0, 0, 0])];\n                    case 5:\n                        _a.sent();\n                        return [4 /*yield*/, this.cmdNums(19 /* DAP_SWD_CONFIGURE */, [0])];\n                    case 6:\n                        _a.sent();\n                        return [4 /*yield*/, this.jtagToSwd()];\n                    case 7:\n                        _a.sent();\n                        console.log(\"Connected\");\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Dap.prototype.jtagToSwd = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var arrs, _i, arrs_1, arr;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        arrs = [\n                            [56, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff],\n                            [16, 0x9e, 0xe7],\n                            [56, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff],\n                            [8, 0x00],\n                        ];\n                        _i = 0, arrs_1 = arrs;\n                        _a.label = 1;\n                    case 1:\n                        if (!(_i < arrs_1.length)) return [3 /*break*/, 4];\n                        arr = arrs_1[_i];\n                        return [4 /*yield*/, this.swjSequence(arr)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Dap.prototype.swjSequence = function (data) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.cmdNums(18 /* DAP_SWJ_SEQUENCE */, data)];\n            });\n        });\n    };\n    Dap.prototype.info = function (id) {\n        return __awaiter(this, void 0, void 0, function () {\n            var buf;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.cmdNums(0 /* DAP_INFO */, [id])];\n                    case 1:\n                        buf = _a.sent();\n                        if (buf[1] === 0) {\n                            return [2 /*return*/, null];\n                        }\n                        switch (id) {\n                            case 240 /* CAPABILITIES */:\n                            case 254 /* PACKET_COUNT */:\n                            case 255 /* PACKET_SIZE */:\n                                if (buf[1] === 1) {\n                                    return [2 /*return*/, buf[2]];\n                                }\n                                else if (buf[1] === 2) {\n                                    return [2 /*return*/, buf[3] << 8 | buf[2]];\n                                }\n                        }\n                        return [2 /*return*/, buf.slice(2, buf[1] + 2 - 1)]; // .toString(\"utf8\")\n                }\n            });\n        });\n    };\n    Dap.prototype.send = function (command) {\n        return __awaiter(this, void 0, void 0, function () {\n            var array, response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        array = Uint8Array.from(command);\n                        return [4 /*yield*/, this.hid.write(array.buffer)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.hid.read()];\n                    case 2:\n                        response = _a.sent();\n                        return [2 /*return*/, new Uint8Array(response.buffer)];\n                }\n            });\n        });\n    };\n    return Dap;\n}());\nexports.Dap = Dap;\n//# sourceMappingURL=dap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dapjs/built/dap.js\n// module id = 7\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MbedTarget_1 = require(\"./MbedTarget\");\nexports.MbedTarget = MbedTarget_1.MbedTarget;\nexports.FlashAlgos = MbedTarget_1.FlashAlgos;\nvar FlashTarget_1 = require(\"./FlashTarget\");\nexports.FlashTarget = FlashTarget_1.FlashTarget;\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dapjs-targets/bin/main.js\n// module id = 8\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FlashTarget_1 = require(\"./FlashTarget\");\nvar K64F_1 = require(\"./K64F\");\nvar microbit_1 = require(\"./microbit\");\nvar MbedTarget = (function (_super) {\n    __extends(MbedTarget, _super);\n    function MbedTarget(device, flashAlgo) {\n        var _this = _super.call(this, device) || this;\n        _this.flashAlgo = flashAlgo;\n        return _this;\n    }\n    /**\n     * Initialise the flash driver on the chip. Must be called before any of the other\n     * flash-related methods.\n     *\n     * **TODO**: check that this has been called before calling other flash methods.\n     */\n    MbedTarget.prototype.flashInit = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.halt()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.writeCoreRegister(9 /* R9 */, this.flashAlgo.staticBase)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.runCode(this.flashAlgo.instructions, this.flashAlgo.loadAddress, this.flashAlgo.pcInit + this.flashAlgo.loadAddress + 0x20, this.flashAlgo.breakpointLocation, this.flashAlgo.stackPointer, true, 0, 0, 0)];\n                    case 3:\n                        result = _a.sent();\n                        // the board should be reset etc. afterwards\n                        // we should also probably run the flash unInit routine\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * Erase _all_ data stored in flash on the chip.\n     */\n    MbedTarget.prototype.eraseChip = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.halt()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.writeCoreRegister(9 /* R9 */, this.flashAlgo.staticBase)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.runCode(this.flashAlgo.instructions, this.flashAlgo.loadAddress, this.flashAlgo.pcEraseAll + this.flashAlgo.loadAddress + 0x20, this.flashAlgo.breakpointLocation, this.flashAlgo.stackPointer, false, 0, 0, 0)];\n                    case 3:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * Upload a program to flash memory on the chip.\n     *\n     * @param data Array of 32-bit integers to write to flash.\n     */\n    MbedTarget.prototype.flash = function (data) {\n        return __awaiter(this, void 0, void 0, function () {\n            var ptr, writeLength, startAddress, bufferAddress, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.halt()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.writeCoreRegister(9 /* R9 */, this.flashAlgo.staticBase)];\n                    case 2:\n                        _a.sent();\n                        ptr = 0;\n                        _a.label = 3;\n                    case 3:\n                        if (!(ptr < data.length)) return [3 /*break*/, 7];\n                        writeLength = Math.min(data.length - ptr, this.flashAlgo.pageSize);\n                        startAddress = this.flashAlgo.flashStart + ptr;\n                        bufferAddress = this.flashAlgo.staticBase;\n                        console.log(\"Writing program to memory: \" + bufferAddress + \" \" + data.length);\n                        return [4 /*yield*/, this.writeBlock(bufferAddress, data.slice(ptr, ptr + this.flashAlgo.pageSize))];\n                    case 4:\n                        _a.sent();\n                        console.log(\"Running flashing algorithm\");\n                        return [4 /*yield*/, this.runCode(this.flashAlgo.instructions, this.flashAlgo.loadAddress, this.flashAlgo.pcProgramPage + this.flashAlgo.loadAddress + 0x20, // pc\n                            this.flashAlgo.breakpointLocation, // lr\n                            this.flashAlgo.stackPointer, // sp\n                            /* upload? */\n                            ptr === 0, \n                            /* args */\n                            startAddress, writeLength, bufferAddress)];\n                    case 5:\n                        result = _a.sent();\n                        console.log(\"Flashed first block.\");\n                        _a.label = 6;\n                    case 6:\n                        ptr += this.flashAlgo.pageSize;\n                        return [3 /*break*/, 3];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MbedTarget.prototype.resetStopOnReset = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var demcr;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        console.log(\"reset stop on Reset\");\n                        return [4 /*yield*/, this.halt()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.readMem(3758157308 /* DEMCR */)];\n                    case 2:\n                        demcr = _a.sent();\n                        return [4 /*yield*/, this.writeMem(3758157308 /* DEMCR */, demcr | 1 /* DEMCR_VC_CORERESET */)];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, this.reset()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [4 /*yield*/, this.isHalted()];\n                    case 6:\n                        if (!!(_a.sent())) return [3 /*break*/, 7];\n                        return [3 /*break*/, 5];\n                    case 7: return [4 /*yield*/, this.writeMem(3758157308 /* DEMCR */, demcr)];\n                    case 8:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return MbedTarget;\n}(FlashTarget_1.FlashTarget));\nexports.MbedTarget = MbedTarget;\nexports.FlashAlgos = new Map();\nexports.FlashAlgos.set('0240', K64F_1.K64F_FLASH_ALGO);\nexports.FlashAlgos.set('9900', microbit_1.MICROBIT_FLASH_ALGO);\n//# sourceMappingURL=MbedTarget.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dapjs-targets/bin/MbedTarget.js\n// module id = 9\n// module chunks = 0","\"use strict\";\n/*\n Flash OS Routines (Automagically Generated)\n Copyright (c) 2017-2017 ARM Limited\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.K64F_FLASH_ALGO = {\n    // Flash algorithm as a hex string\n    instructions: [\n        0xb510483e, 0x5120f24c, 0xf64d81c1, 0x81c11128, 0xf0218801, 0x80010101, 0x78414839, 0x0160f001,\n        0xbf0c2940, 0x21002101, 0x444a4a36, 0xb1397011, 0xf0217841, 0x70410160, 0xf0117841, 0xd1fb0f60,\n        0x44484831, 0xf864f000, 0xbf182800, 0xbd102001, 0x4448482c, 0xb1587800, 0x78414829, 0x0160f021,\n        0x0140f041, 0x78417041, 0x0160f001, 0xd1fa2940, 0x47702000, 0xb5104824, 0x44484924, 0xf891f000,\n        0xbf182800, 0x2100bd10, 0xe8bd481f, 0x44484010, 0xb958f000, 0x4c1cb570, 0x444c4605, 0x4b1b4601,\n        0x68e24620, 0xf8b6f000, 0xbf182800, 0x2300bd70, 0x68e24629, 0x4070e8bd, 0x44484813, 0xb94cf000,\n        0x460cb570, 0x4606460b, 0x480f4601, 0x4615b084, 0xf0004448, 0x2800f8eb, 0xb004bf1c, 0x2000bd70,\n        0xe9cd2101, 0x90021000, 0x462b4807, 0x46314622, 0xf0004448, 0xb004f97f, 0x0000bd70, 0x40052000,\n        0x4007e000, 0x00000004, 0x00000008, 0x6b65666b, 0xbf042800, 0x47702004, 0x6cc949ea, 0x6103f3c1,\n        0xbf08290f, 0x1180f44f, 0x4ae7bf1f, 0xf832447a, 0x02891011, 0xe9c02200, 0x21022100, 0x61426081,\n        0x618202c9, 0x1203e9c0, 0x52a0f04f, 0x2108e9c0, 0x47702000, 0xbf0e2800, 0x61012004, 0x47702000,\n        0x48da4602, 0x49d96840, 0x0070f440, 0x47706048, 0x217048d7, 0x21807001, 0x78017001, 0x0f80f011,\n        0x7800d0fb, 0x0f20f010, 0x2067bf1c, 0xf0104770, 0xbf1c0f10, 0x47702068, 0x0001f010, 0x2069bf18,\n        0x28004770, 0x2004bf04, 0xb5104770, 0x4ac84604, 0x403bf06f, 0x48c76050, 0xbf144281, 0x2000206b,\n        0xbf182800, 0x4620bd10, 0xffd2f7ff, 0x46204603, 0xffc6f7ff, 0xbd104618, 0xbf042800, 0x47702004,\n        0x60532300, 0x60d36093, 0x61536113, 0x61d36193, 0x68c16011, 0xe9d06051, 0xfbb11001, 0x6090f0f0,\n        0x21102008, 0x0103e9c2, 0x1005e9c2, 0x61d02004, 0x47702000, 0x4df0e92d, 0x4615b088, 0x460c4698,\n        0x466a4682, 0xffd8f7ff, 0x4621462a, 0x9b044650, 0xf931f000, 0xbf1c0007, 0xe8bdb008, 0xe9dd8df0,\n        0x19604600, 0xfbb51e45, 0xfb06f0f6, 0xb1205010, 0xf0f6fbb5, 0x43701c40, 0x42ac1e45, 0xf8dfbf98,\n        0xd81cb270, 0x407ff024, 0x6010f040, 0x0004f8cb, 0x45804898, 0x206bbf14, 0x28002000, 0xb008bf1c,\n        0x8df0e8bd, 0xf7ff4650, 0x4607ff73, 0x0010f8da, 0xbf182800, 0xb9174780, 0x42ac4434, 0x4650d9e2,\n        0xff5ef7ff, 0x4638b008, 0x8df0e8bd, 0xbf042a00, 0x47702004, 0x45f0e92d, 0x4614b089, 0x460d461e,\n        0x466a4680, 0xff88f7ff, 0x46294632, 0x9b034640, 0xf8e1f000, 0xbf1c0007, 0xe8bdb009, 0x9d0085f0,\n        0xbf182e00, 0xa1e8f8df, 0xf854d025, 0xf8ca0b04, 0x98030008, 0xbf042804, 0x407ff025, 0x60c0f040,\n        0x2808d009, 0xf854d109, 0xf8ca0b04, 0xf025000c, 0xf040407f, 0xf8ca60e0, 0x46400004, 0xff28f7ff,\n        0x1010f8d8, 0x29004607, 0x4788bf18, 0x9803b91f, 0x1a364405, 0x4640d1d9, 0xff12f7ff, 0x4638b009,\n        0x85f0e8bd, 0xbf042800, 0x47702004, 0xea424a62, 0x4a5f4101, 0xe70b6051, 0x4dffe92d, 0x4614b088,\n        0x460d469a, 0x9808466a, 0xff36f7ff, 0x46294622, 0x98089b05, 0xf88ff000, 0xbf1c2800, 0xe8bdb00c,\n        0x466a8df0, 0x98084629, 0xff26f7ff, 0xf8dd9e00, 0x42708008, 0x0100f1c8, 0x42474008, 0xbf0842b7,\n        0x2c004447, 0xf8dfbf18, 0xd01fb128, 0x42a51bbd, 0x4625bf88, 0xf0269805, 0xfbb5417f, 0xf041f0f0,\n        0xf8cb7180, 0x04001004, 0x200aea40, 0x00fff040, 0x0008f8cb, 0xf7ff9808, 0x2800fecb, 0xb00cbf1c,\n        0x8df0e8bd, 0x442e1b64, 0xd1df4447, 0x2000b00c, 0x8df0e8bd, 0xbf042b00, 0x47702004, 0x4dffe92d,\n        0x4616b088, 0x7a14e9dd, 0x460c461d, 0xf8dd466a, 0x98088058, 0xfee0f7ff, 0x3007e9dd, 0x46214632,\n        0xf839f000, 0xbf1c2800, 0xe8bdb00c, 0x9c008df0, 0xbf042e00, 0xe8bdb00c, 0xf8df8df0, 0xf06fb094,\n        0xea40407f, 0xf0246707, 0xf040407f, 0xf8cb7000, 0xf8cb0004, 0x68287008, 0x000cf8cb, 0xf7ff9808,\n        0xb168fe87, 0x0f00f1ba, 0xf8cabf18, 0xf1b84000, 0xbf1c0f00, 0xf8c82100, 0xb00c1000, 0x8df0e8bd,\n        0x1a769907, 0x0103f021, 0x9907440d, 0xd1da440c, 0xe8bdb00c, 0x28008df0, 0x2004bf04, 0xf1a34770,\n        0x42190301, 0x421abf0e, 0x47702065, 0x428b6803, 0x6840d806, 0x44184411, 0xbf244288, 0x47702000,\n        0x47702066, 0x40048000, 0x000003b4, 0x4001f000, 0x40020000, 0x6b65666b, 0x4000ffff, 0x40020004,\n        0x40020010, 0x00100008, 0x00200018, 0x00400030, 0x00800060, 0x010000c0, 0x02000180, 0x04000300,\n        0x00000600, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,\n        0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,\n    ],\n    // Relative function addresses\n    pcInit: 0x1,\n    pcUnInit: 0x51,\n    pcProgramPage: 0xc1,\n    pcEraseSector: 0x95,\n    pcEraseAll: 0x75,\n    // Relative region addresses and sizes\n    roStart: 0x0,\n    roSize: 0x504,\n    rwStart: 0x504,\n    rwSize: 0x8,\n    ziStart: 0x50c,\n    ziSize: 0x34,\n    // Flash information\n    flashStart: 0x0,\n    flashSize: 0x0,\n    pageSize: 0x400,\n    sectorSizes: [\n        [0x0, 0x400],\n    ],\n    breakpointLocation: 0x20000001,\n    staticBase: 0x20000524,\n    stackPointer: 0x20000800,\n    loadAddress: 0x20000000,\n};\n//# sourceMappingURL=K64f.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dapjs-targets/bin/K64F.js\n// module id = 10\n// module chunks = 0","\"use strict\";\n/*\n Flash OS Routines (Automagically Generated)\n Copyright (c) 2017-2017 ARM Limited\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MICROBIT_FLASH_ALGO = {\n    // Flash algorithm as a hex string\n    instructions: [\n        0x47702000, 0x47702000, 0x4c34b4f0, 0x60602002, 0x60e02001, 0x4e334d32, 0x4b344f33, 0x07c06828,\n        0x2000d003, 0xbcf06060, 0x68704770, 0x0e000600, 0x6879d0f4, 0xd0f12900, 0x07c2492d, 0x600bd000,\n        0x08401d09, 0xe7e9d1f9, 0x4c24b4f0, 0x60612102, 0x42884928, 0x2001d302, 0xe0006160, 0x4e2160a0,\n        0x4d234f21, 0x68704b21, 0x0e000600, 0x6879d009, 0xd0062900, 0x07c24629, 0x600bd000, 0x08401d09,\n        0x4817d1f9, 0x07c06800, 0x2000d0ed, 0xbcf06060, 0xb4f04770, 0x4911088e, 0x604b2301, 0x4d134f11,\n        0xc002ca02, 0x6809490e, 0xd00707c9, 0xd1f71e76, 0x2100480a, 0xbcf06041, 0x47704608, 0x06096879,\n        0xd0ef0e09, 0x685b4b08, 0xd0eb2b00, 0x07cc4b08, 0x601dd000, 0x08491d1b, 0xe7e3d1f9, 0x4001e500,\n        0x4001e400, 0x40010400, 0x40010500, 0x6e524635, 0x40010600, 0x10001000, 0x00000000\n    ],\n    // Relative function addresses\n    pcInit: 0x1,\n    pcUnInit: 0x5,\n    pcProgramPage: 0x93,\n    pcEraseSector: 0x49,\n    pcEraseAll: 0x9,\n    // Relative region addresses and sizes\n    roStart: 0x0,\n    roSize: 0xf8,\n    rwStart: 0xf8,\n    rwSize: 0x4,\n    ziStart: 0xfc,\n    ziSize: 0x0,\n    // Flash information\n    flashStart: 0x0,\n    flashSize: 0x40000,\n    pageSize: 0x4,\n    sectorSizes: [\n        [0x0, 0x400],\n    ],\n    breakpointLocation: 0x20000001,\n    staticBase: 0x20000118,\n    stackPointer: 0x20000800,\n    loadAddress: 0x20000000\n};\n//# sourceMappingURL=microbit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dapjs-targets/bin/microbit.js\n// module id = 11\n// module chunks = 0","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction bufferExtend(source, length) {\n    var sarr = new Uint8Array(source);\n    var dest = new ArrayBuffer(length);\n    var darr = new Uint8Array(dest);\n    for (var i = 0; i < Math.min(source.byteLength, length); i++) {\n        darr[i] = sarr[i];\n    }\n    return dest;\n}\nvar HID = (function () {\n    function HID(device) {\n        this.device = device;\n    }\n    HID.prototype.open = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var hids, _i, _a, endpoint;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.device.open()];\n                    case 1:\n                        _b.sent();\n                        return [4 /*yield*/, this.device.selectConfiguration(1)];\n                    case 2:\n                        _b.sent();\n                        hids = this.device.configuration.interfaces.filter(function (intf) { return intf.alternates[0].interfaceClass == 0x03; });\n                        if (hids.length == 0) {\n                            throw 'No HID interfaces found.';\n                        }\n                        this.interfaces = hids;\n                        if (this.interfaces.length == 1) {\n                            this.interface = this.interfaces[0];\n                        }\n                        return [4 /*yield*/, this.device.claimInterface(this.interface.interfaceNumber)];\n                    case 3:\n                        _b.sent();\n                        this.endpoints = this.interface.alternates[0].endpoints;\n                        this.ep_in = null;\n                        this.ep_out = null;\n                        for (_i = 0, _a = this.endpoints; _i < _a.length; _i++) {\n                            endpoint = _a[_i];\n                            if (endpoint.direction == 'in') {\n                                this.ep_in = endpoint;\n                            }\n                            else {\n                                this.ep_out = endpoint;\n                            }\n                        }\n                        if (this.ep_in == null || this.ep_out == null) {\n                            console.log('Unable to find an in and an out endpoint.');\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    HID.prototype.close = function () {\n        return this.device.close();\n    };\n    HID.prototype.write = function (data) {\n        var report_size = this.ep_out.packetSize;\n        var buffer = bufferExtend(data, report_size);\n        return this.device.transferOut(this.ep_out.endpointNumber, buffer);\n    };\n    HID.prototype.read = function () {\n        var report_size = this.ep_in.packetSize;\n        return this.device.transferIn(this.ep_in.endpointNumber, report_size)\n            .then(function (res) { return res.data; });\n    };\n    return HID;\n}());\nexports.default = HID;\n//# sourceMappingURL=hid.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/webhid/bin/hid.js\n// module id = 12\n// module chunks = 0","\nexport interface IPlatform {\n    name: string;\n    productCode: string;\n}\n\nexport class PlatformSelector {\n    private deviceCache: Map<string, IPlatform>;\n    private element: HTMLSelectElement;\n    private deviceElement: HTMLElement;\n\n    constructor(id: string, devices: string) {\n        const elem = document.getElementById(id);\n        this.deviceElement = document.getElementById(devices);\n\n        if (elem.nodeName === \"SELECT\") {\n            this.element = elem as HTMLSelectElement;\n        } else {\n            console.log(elem.nodeName);\n            throw new Error(\"select element must be chosen\");\n        }\n\n        this.deviceCache = new Map<string, IPlatform>();\n    }\n\n    public show(platform: IPlatform) {\n        this.deviceElement.innerHTML =\n            `<option value='${platform.productCode}' id='${platform.productCode}'>${platform.name}</option>`;\n        this.element.value = platform.productCode;\n    }\n\n    public enable() {\n        this.element.disabled = false;\n    }\n\n    public disable() {\n        this.element.disabled = true;\n    }\n\n    public async lookupDevice(code: string) {\n        if (this.deviceCache.has(code)) {\n            return this.deviceCache.get(code);\n        }\n\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"get\", `https://developer.mbed.org/api/v3/platforms/${code}`, true);\n        xhr.responseType = \"json\";\n\n        return new Promise<IPlatform>((resolve, reject) => {\n            xhr.onload = (e: any) => {\n                const device = {\n                    name: xhr.response.name,\n                    productCode: xhr.response.productcode,\n                };\n                this.deviceCache.set(code, device);\n\n                resolve(device);\n            };\n            xhr.send();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/device_selector.ts","\nexport default class HTMLLogger {\n    private element: Element;\n\n    constructor(selector: string) {\n        this.element = document.querySelector(selector);\n    }\n\n    public log(data: string) {\n        this.element.innerHTML = this.element.innerHTML + data + \"\\n\";\n    }\n\n    public clear() {\n        this.element.innerHTML = \"\";\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/logger.ts"],"sourceRoot":""}