{"version":3,"sources":["webpack:///webpack/bootstrap f6c80fc5cd508229e13a","webpack:///../dapjs/built/util.js","webpack:///../dapjs/built/core/cortex_m.js","webpack:///../dapjs/built/main.js","webpack:///../dapjs/built/dap.js","webpack:///./src/main.ts","webpack:///../dapjs/built/debug/debug.js","webpack:///../dapjs/built/debug/breakpoint.js","webpack:///../dapjs/built/core/memory.js","webpack:///../dapjs/built/transport/cmsis_dap.js","webpack:///../dapjs/built/targets/FlashTarget.js","webpack:///../dapjs/built/targets/K64F.js","webpack:///../dapjs/built/targets/NRF51.js","webpack:///./node_modules/webhid/bin/hid.js","webpack:///./src/device_selector.ts","webpack:///./src/logger.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL,CAAC,EAAE;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB,EAAE;AACnD;AACA,gCAAgC,8CAA8C,EAAE;AAChF;AACA;AACA,gC;;;;;;;ACtIA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,cAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB,EAAE,EAAE;AACzB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,oC;;;;;;;AChdA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,EAAE;AACH,gC;;;;;;;ACzDA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,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I,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;AACrC,CAAC,CAAC;;;;;;;;AC3NF;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,iC;;;;;;;AChPA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;ACxHA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,sDAAsD;AACnG;AACA,6BAA6B,EAAE,EAAE,EAAE,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B,EAAE,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,kC;;;;;;;AC9VA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;ACpNA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,uC;;;;;;;AC5LA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gC;;;;;;;AC5GA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iC;;;;;;;ACvCA;AACA;AACA;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;AACA;AACA,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C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","file":"dap.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f6c80fc5cd508229e13a","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar _this = this;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.readUInt32LE = function (b, idx) {\r\n    return (b[idx] |\r\n        (b[idx + 1] << 8) |\r\n        (b[idx + 2] << 16) |\r\n        (b[idx + 3] << 24)) >>> 0;\r\n};\r\nexports.bufferConcat = function (bufs) {\r\n    var len = 0;\r\n    for (var _i = 0, bufs_1 = bufs; _i < bufs_1.length; _i++) {\r\n        var b = bufs_1[_i];\r\n        len += b.length;\r\n    }\r\n    var r = new Uint8Array(len);\r\n    len = 0;\r\n    for (var _a = 0, bufs_2 = bufs; _a < bufs_2.length; _a++) {\r\n        var b = bufs_2[_a];\r\n        r.set(b, len);\r\n        len += b.length;\r\n    }\r\n    return r;\r\n};\r\nexports.delay = function (t) { return __awaiter(_this, void 0, void 0, function () {\r\n    return __generator(this, function (_a) {\r\n        return [2 /*return*/, new Promise(function (resolve) {\r\n                setTimeout(resolve, t);\r\n            })];\r\n    });\r\n}); };\r\nexports.addInt32 = function (arr, val) {\r\n    if (!arr) {\r\n        arr = [];\r\n    }\r\n    arr.push(val & 0xff, (val >> 8) & 0xff, (val >> 16) & 0xff, (val >> 24) & 0xff);\r\n    return arr;\r\n};\r\nexports.hex = function (v) {\r\n    return \"0x\" + v.toString(16);\r\n};\r\nexports.rid = function (v) {\r\n    var m = [\r\n        \"DP_0x0\",\r\n        \"DP_0x4\",\r\n        \"DP_0x8\",\r\n        \"DP_0xC\",\r\n        \"AP_0x0\",\r\n        \"AP_0x4\",\r\n        \"AP_0x8\",\r\n        \"AP_0xC\",\r\n    ];\r\n    return m[v] || \"?\";\r\n};\r\nexports.bank = function (addr) {\r\n    var APBANKSEL = 0x000000f0;\r\n    return (addr & APBANKSEL) | (addr & 0xff000000);\r\n};\r\nexports.apReg = function (r, mode) {\r\n    var v = r | mode | 1 /* AP_ACC */;\r\n    return (4 + ((v & 0x0c) >> 2));\r\n};\r\nexports.bufToUint32Array = function (buf) {\r\n    exports.assert((buf.length & 3) === 0);\r\n    var r = [];\r\n    if (!buf.length) {\r\n        return r;\r\n    }\r\n    r[buf.length / 4 - 1] = 0;\r\n    for (var i = 0; i < r.length; ++i) {\r\n        r[i] = exports.readUInt32LE(buf, i << 2);\r\n    }\r\n    return r;\r\n};\r\nexports.assert = function (cond) {\r\n    if (!cond) {\r\n        throw new Error(\"assertion failed\");\r\n    }\r\n};\r\nexports.regRequest = function (regId, isWrite) {\r\n    if (isWrite === void 0) { isWrite = false; }\r\n    var request = !isWrite ? 2 /* READ */ : 0 /* WRITE */;\r\n    if (regId < 4) {\r\n        request |= 0 /* DP_ACC */;\r\n    }\r\n    else {\r\n        request |= 1 /* AP_ACC */;\r\n    }\r\n    request |= (regId & 3) << 2;\r\n    return request;\r\n};\r\nexports.hexBytes = function (bytes) {\r\n    var chk = 0;\r\n    var r = \":\";\r\n    bytes.forEach(function (b) { return chk += b; });\r\n    bytes.push((-chk) & 0xff);\r\n    bytes.forEach(function (b) { return r += (\"0\" + b.toString(16)).slice(-2); });\r\n    return r.toUpperCase();\r\n};\r\n//# sourceMappingURL=util.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dapjs/built/util.js\n// module id = 0\n// module chunks = 0","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar debug_1 = require(\"../debug/debug\");\r\nvar util_1 = require(\"../util\");\r\nvar memory_1 = require(\"./memory\");\r\nvar DEFAULT_RUNCODE_TIMEOUT = 10000 /* ms */;\r\nexports.CPUID_IMPLEMENTER_MASK = 0xff000000;\r\nexports.CPUID_IMPLEMENTER_POS = 24;\r\nexports.CPUID_VARIANT_MASK = 0x00f00000;\r\nexports.CPUID_VARIANT_POS = 20;\r\nexports.CPUID_ARCHITECTURE_MASK = 0x000f0000;\r\nexports.CPUID_ARCHITECTURE_POS = 16;\r\nexports.CPUID_PARTNO_MASK = 0x0000fff0;\r\nexports.CPUID_PARTNO_POS = 4;\r\nexports.CPUID_REVISION_MASK = 0x0000000f;\r\nexports.CPUID_REVISION_POS = 0;\r\nexports.ISANames = new Map();\r\nexports.ISANames.set(12 /* ARMv6M */, \"ARMv6M\");\r\nexports.ISANames.set(15 /* ARMv7M */, \"ARMv7M\");\r\nexports.CoreNames = new Map();\r\nexports.CoreNames.set(3104 /* CortexM0 */, \"Cortex-M0\");\r\nexports.CoreNames.set(3105 /* CortexM1 */, \"Cortex-M1\");\r\nexports.CoreNames.set(3107 /* CortexM3 */, \"Cortex-M3\");\r\nexports.CoreNames.set(3108 /* CortexM4 */, \"Cortex-M4\");\r\nexports.CoreNames.set(3168 /* CortexM0p */, \"Cortex-M0+\");\r\n/**\r\n * Abstraction of an ARM Cortex M CPU from a programmer's perspective. Provides functionality\r\n * for setting breakpoints, reading general-purpose registers, reading from memory and stopping\r\n * and starting the CPU.\r\n */\r\nvar CortexM = (function () {\r\n    function CortexM(device) {\r\n        this.dev = device;\r\n        this.memory = new memory_1.Memory(device);\r\n        this.debug = new debug_1.Debug(this);\r\n    }\r\n    /**\r\n     * Initialise the debug access port on the device, and read the device type.\r\n     */\r\n    CortexM.prototype.init = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.dev.init()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        // FIXME: don't run this if security is enabled on the K64F\r\n                        return [4 /*yield*/, this.debug.setupFpb()];\r\n                    case 2:\r\n                        // FIXME: don't run this if security is enabled on the K64F\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.readCoreType()];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Read the current state of the CPU.\r\n     *\r\n     * @returns A member of the `CoreState` enum corresponding to the current status of the CPU.\r\n     */\r\n    CortexM.prototype.getState = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var dhcsr, newDHCSR;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.memory.read32(3758157296 /* DHCSR */)];\r\n                    case 1:\r\n                        dhcsr = _a.sent();\r\n                        if (!(dhcsr & 33554432 /* S_RESET_ST */)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.memory.read32(3758157296 /* DHCSR */)];\r\n                    case 2:\r\n                        newDHCSR = _a.sent();\r\n                        if (newDHCSR & 33554432 /* S_RESET_ST */ && !(newDHCSR & 16777216 /* S_RETIRE_ST */)) {\r\n                            return [2 /*return*/, 0 /* TARGET_RESET */];\r\n                        }\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        if (dhcsr & 524288 /* S_LOCKUP */) {\r\n                            return [2 /*return*/, 1 /* TARGET_LOCKUP */];\r\n                        }\r\n                        else if (dhcsr & 262144 /* S_SLEEP */) {\r\n                            return [2 /*return*/, 2 /* TARGET_SLEEPING */];\r\n                        }\r\n                        else if (dhcsr & 131072 /* S_HALT */) {\r\n                            return [2 /*return*/, 3 /* TARGET_HALTED */];\r\n                        }\r\n                        else {\r\n                            return [2 /*return*/, 4 /* TARGET_RUNNING */];\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Read the CPUID register from the CPU, and interpret its meaning in terms of implementer,\r\n     * architecture and core type.\r\n     */\r\n    CortexM.prototype.readCoreType = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var cpuid, implementer, arch, coreType;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.memory.read32(3758157056 /* CPUID */)];\r\n                    case 1:\r\n                        cpuid = _a.sent();\r\n                        implementer = ((cpuid & exports.CPUID_IMPLEMENTER_MASK) >> exports.CPUID_IMPLEMENTER_POS);\r\n                        arch = ((cpuid & exports.CPUID_ARCHITECTURE_MASK) >> exports.CPUID_ARCHITECTURE_POS);\r\n                        coreType = ((cpuid & exports.CPUID_PARTNO_MASK) >> exports.CPUID_PARTNO_POS);\r\n                        console.debug(\"Found an ARM \" + exports.CoreNames.get(coreType));\r\n                        return [2 /*return*/, [implementer, arch, coreType]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Read a core register from the CPU (e.g. r0...r15, pc, sp, lr, s0...)\r\n     *\r\n     * @param no Member of the `CortexReg` enum - an ARM Cortex CPU general-purpose register.\r\n     */\r\n    CortexM.prototype.readCoreRegister = function (no) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var v;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.memory.write32(3758157300 /* DCRSR */, no)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.memory.read32(3758157296 /* DHCSR */)];\r\n                    case 2:\r\n                        v = _a.sent();\r\n                        util_1.assert(v & 65536 /* S_REGRDY */);\r\n                        return [4 /*yield*/, this.memory.read32(3758157304 /* DCRDR */)];\r\n                    case 3: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Write a 32-bit word to the specified CPU general-purpose register.\r\n     *\r\n     * @param no Member of the `CortexReg` enum - an ARM Cortex CPU general-purpose register.\r\n     * @param val Value to be written.\r\n     */\r\n    CortexM.prototype.writeCoreRegister = function (no, val) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var v;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.memory.write32(3758157304 /* DCRDR */, val)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.memory.write32(3758157300 /* DCRSR */, no | 65536 /* DCRSR_REGWnR */)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.memory.read32(3758157296 /* DHCSR */)];\r\n                    case 3:\r\n                        v = _a.sent();\r\n                        util_1.assert(v & 65536 /* S_REGRDY */);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Halt the CPU core.\r\n     */\r\n    CortexM.prototype.halt = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.memory.write32(3758157296 /* DHCSR */, -1604386816 /* DBGKEY */ | 1 /* C_DEBUGEN */ | 2 /* C_HALT */)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Resume the CPU core.\r\n     */\r\n    CortexM.prototype.resume = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.isHalted()];\r\n                    case 1:\r\n                        if (!_a.sent()) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, this.memory.write32(3758157104 /* DFSR */, 4 /* DFSR_DWTTRAP */ | 2 /* DFSR_BKPT */ | 1 /* DFSR_HALTED */)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.debug.enable()];\r\n                    case 3:\r\n                        _a.sent();\r\n                        _a.label = 4;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Find out whether the CPU is halted.\r\n     */\r\n    CortexM.prototype.isHalted = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var s;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.status()];\r\n                    case 1:\r\n                        s = _a.sent();\r\n                        return [2 /*return*/, s.isHalted];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Read the current status of the CPU.\r\n     *\r\n     * @returns Object containing the contents of the `DHCSR` register, the `DFSR` register, and a boolean value\r\n     * stating the current halted state of the CPU.\r\n     */\r\n    CortexM.prototype.status = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var dhcsr, dfsr;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.memory.read32(3758157296 /* DHCSR */)];\r\n                    case 1:\r\n                        dhcsr = _a.sent();\r\n                        return [4 /*yield*/, this.memory.read32(3758157104 /* DFSR */)];\r\n                    case 2:\r\n                        dfsr = _a.sent();\r\n                        return [2 /*return*/, {\r\n                                dfsr: dfsr,\r\n                                dhscr: dhcsr,\r\n                                isHalted: !!(dhcsr & 131072 /* S_HALT */),\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Reset the CPU core. This currently does a software reset - it is also technically possible to perform a 'hard'\r\n     * reset using the reset pin from the debugger.\r\n     */\r\n    CortexM.prototype.reset = function (halt) {\r\n        if (halt === void 0) { halt = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var demcr;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!halt) return [3 /*break*/, 7];\r\n                        return [4 /*yield*/, this.halt()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.memory.read32(3758157308 /* DEMCR */)];\r\n                    case 2:\r\n                        demcr = _a.sent();\r\n                        return [4 /*yield*/, this.memory.write32(3758157308 /* DEMCR */, demcr | 1 /* DEMCR_VC_CORERESET */)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.softwareReset()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.waitForHalt()];\r\n                    case 5:\r\n                        _a.sent();\r\n                        // Unset the VC_CORERESET bit\r\n                        return [4 /*yield*/, this.memory.write32(3758157308 /* DEMCR */, demcr)];\r\n                    case 6:\r\n                        // Unset the VC_CORERESET bit\r\n                        _a.sent();\r\n                        return [3 /*break*/, 9];\r\n                    case 7: return [4 /*yield*/, this.softwareReset()];\r\n                    case 8:\r\n                        _a.sent();\r\n                        _a.label = 9;\r\n                    case 9: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Run specified machine code natively on the device. Assumes usual C calling conventions\r\n     * - returns the value of r0 once the program has terminated. The program _must_ terminate\r\n     * in order for this function to return. This can be achieved by placing a `bkpt`\r\n     * instruction at the end of the function.\r\n     *\r\n     * **FIXME**: currently causes a hard fault when the core is resumed after successfully uploading\r\n     * the blob to memory and setting core registers.\r\n     *\r\n     * @param code array containing the machine code (32-bit words).\r\n     * @param address memory address at which to place the code.\r\n     * @param pc initial value of the program counter.\r\n     * @param lr initial value of the link register.\r\n     * @param sp initial value of the stack pointer.\r\n     * @param upload should we upload the code before running it.\r\n     * @param args set registers r0...rn before running code\r\n     *\r\n     * @returns A promise for the value of r0 on completion of the function call.\r\n     */\r\n    CortexM.prototype.runCode = function (code, address, pc, lr, sp, upload) {\r\n        var args = [];\r\n        for (var _i = 6; _i < arguments.length; _i++) {\r\n            args[_i - 6] = arguments[_i];\r\n        }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var i;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: \r\n                    // Halt the core\r\n                    return [4 /*yield*/, this.halt()];\r\n                    case 1:\r\n                        // Halt the core\r\n                        _a.sent();\r\n                        // Point the program counter to the start of the program\r\n                        return [4 /*yield*/, this.writeCoreRegister(15 /* PC */, pc)];\r\n                    case 2:\r\n                        // Point the program counter to the start of the program\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.writeCoreRegister(14 /* LR */, lr)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.writeCoreRegister(13 /* SP */, sp)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        i = 0;\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        if (!(i < args.length)) return [3 /*break*/, 8];\r\n                        return [4 /*yield*/, this.writeCoreRegister(i, args[i])];\r\n                    case 6:\r\n                        _a.sent();\r\n                        _a.label = 7;\r\n                    case 7:\r\n                        i++;\r\n                        return [3 /*break*/, 5];\r\n                    case 8:\r\n                        if (!upload) return [3 /*break*/, 10];\r\n                        return [4 /*yield*/, this.memory.writeBlock(address, code)];\r\n                    case 9:\r\n                        _a.sent();\r\n                        _a.label = 10;\r\n                    case 10: \r\n                    // Run the program and wait for halt\r\n                    return [4 /*yield*/, this.resume()];\r\n                    case 11:\r\n                        // Run the program and wait for halt\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.waitForHalt(DEFAULT_RUNCODE_TIMEOUT)];\r\n                    case 12:\r\n                        _a.sent(); // timeout after 10s\r\n                        return [4 /*yield*/, this.readCoreRegister(0 /* R0 */)];\r\n                    case 13: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Spin until the chip has halted.\r\n     */\r\n    CortexM.prototype.waitForHalt = function (timeout) {\r\n        if (timeout === void 0) { timeout = 0; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                        var running, _a;\r\n                        return __generator(this, function (_b) {\r\n                            switch (_b.label) {\r\n                                case 0:\r\n                                    running = true;\r\n                                    if (timeout > 0) {\r\n                                        setTimeout(function () {\r\n                                            reject(\"waitForHalt timed out.\");\r\n                                            running = false;\r\n                                        }, timeout);\r\n                                    }\r\n                                    _b.label = 1;\r\n                                case 1:\r\n                                    _a = running;\r\n                                    if (!_a) return [3 /*break*/, 3];\r\n                                    return [4 /*yield*/, this.isHalted()];\r\n                                case 2:\r\n                                    _a = !(_b.sent());\r\n                                    _b.label = 3;\r\n                                case 3:\r\n                                    if (!_a) return [3 /*break*/, 4];\r\n                                    return [3 /*break*/, 1];\r\n                                case 4:\r\n                                    if (running) {\r\n                                        resolve();\r\n                                    }\r\n                                    return [2 /*return*/];\r\n                            }\r\n                        });\r\n                    }); })];\r\n            });\r\n        });\r\n    };\r\n    CortexM.prototype.softwareReset = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var dhcsr;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.memory.write32(3758157068 /* NVIC_AIRCR */, 100270080 /* NVIC_AIRCR_VECTKEY */ | 4 /* NVIC_AIRCR_SYSRESETREQ */)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.memory.read32(3758157296 /* DHCSR */)];\r\n                    case 2:\r\n                        dhcsr = _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        if (!((dhcsr & 33554432 /* S_RESET_ST */) !== 0)) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.memory.read32(3758157296 /* DHCSR */)];\r\n                    case 4:\r\n                        dhcsr = _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return CortexM;\r\n}());\r\nexports.CortexM = CortexM;\r\n//# sourceMappingURL=cortex_m.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dapjs/built/core/cortex_m.js\n// module id = 1\n// module chunks = 0","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar _this = this;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar cortex_m_1 = require(\"./core/cortex_m\");\r\nexports.CortexM = cortex_m_1.CortexM;\r\nexports.CoreNames = cortex_m_1.CoreNames;\r\nexports.ISANames = cortex_m_1.ISANames;\r\nvar dap_1 = require(\"./dap\");\r\nexports.DAP = dap_1.DAP;\r\nvar FlashTarget_1 = require(\"./targets/FlashTarget\");\r\nexports.FlashTargets = FlashTarget_1.FlashTargets;\r\nexports.FlashTarget = FlashTarget_1.FlashTarget;\r\nvar cortex_m_2 = require(\"./core/cortex_m\");\r\nvar dap_2 = require(\"./dap\");\r\nexports.discoverTarget = function (hid) { return __awaiter(_this, void 0, void 0, function () {\r\n    var dap, core;\r\n    return __generator(this, function (_a) {\r\n        dap = new dap_2.DAP(hid);\r\n        core = new cortex_m_2.CortexM(dap);\r\n        return [2 /*return*/];\r\n    });\r\n}); };\r\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dapjs/built/main.js\n// module id = 2\n// module chunks = 0","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar cmsis_dap_1 = require(\"./transport/cmsis_dap\");\r\nvar util_1 = require(\"./util\");\r\nvar DAP = (function () {\r\n    function DAP(device) {\r\n        this.device = device;\r\n        this.dap = new cmsis_dap_1.CMSISDAP(device);\r\n    }\r\n    DAP.prototype.reconnect = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.dap.disconnect()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, util_1.delay(100)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.init()];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DAP.prototype.init = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var n, m, v;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.dap.connect()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.readDp(0 /* IDCODE */)];\r\n                    case 2:\r\n                        n = _a.sent();\r\n                        this.idcode = n;\r\n                        return [4 /*yield*/, this.writeReg(0 /* DP_0x0 */, 1 << 2)];\r\n                    case 3:\r\n                        _a.sent(); // clear sticky error\r\n                        return [4 /*yield*/, this.writeDp(2 /* SELECT */, 0)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.writeDp(1 /* CTRL_STAT */, 1073741824 /* CSYSPWRUPREQ */ | 268435456 /* CDBGPWRUPREQ */)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        m = 536870912 /* CDBGPWRUPACK */ | 2147483648 /* CSYSPWRUPACK */;\r\n                        return [4 /*yield*/, this.readDp(1 /* CTRL_STAT */)];\r\n                    case 6:\r\n                        v = _a.sent();\r\n                        _a.label = 7;\r\n                    case 7:\r\n                        if (!((v & m) !== m)) return [3 /*break*/, 9];\r\n                        return [4 /*yield*/, this.readDp(1 /* CTRL_STAT */)];\r\n                    case 8:\r\n                        v = _a.sent();\r\n                        return [3 /*break*/, 7];\r\n                    case 9: return [4 /*yield*/, this.writeDp(1 /* CTRL_STAT */, (1073741824 /* CSYSPWRUPREQ */ |\r\n                            268435456 /* CDBGPWRUPREQ */ |\r\n                            0 /* TRNNORMAL */ |\r\n                            3840 /* MASKLANE */))];\r\n                    case 10:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.writeDp(2 /* SELECT */, 0)];\r\n                    case 11:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.readAp(252 /* IDR */)];\r\n                    case 12:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DAP.prototype.writeReg = function (regId, val) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.regOp(regId, val)];\r\n            });\r\n        });\r\n    };\r\n    DAP.prototype.readReg = function (regId) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var buf, v;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.regOp(regId, null)];\r\n                    case 1:\r\n                        buf = _a.sent();\r\n                        v = util_1.readUInt32LE(buf, 3);\r\n                        return [2 /*return*/, v];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DAP.prototype.readDp = function (addr) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.readReg(addr)];\r\n            });\r\n        });\r\n    };\r\n    DAP.prototype.readAp = function (addr) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.writeDp(2 /* SELECT */, util_1.bank(addr))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.readReg(util_1.apReg(addr, 2 /* READ */))];\r\n                    case 2: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DAP.prototype.writeDp = function (addr, data) {\r\n        if (addr === 2 /* SELECT */) {\r\n            if (data === this.dpSelect) {\r\n                return Promise.resolve();\r\n            }\r\n            this.dpSelect = data;\r\n        }\r\n        return this.writeReg(addr, data);\r\n    };\r\n    DAP.prototype.writeAp = function (addr, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.writeDp(2 /* SELECT */, util_1.bank(addr))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        if (addr === 0 /* CSW */) {\r\n                            if (data === this.csw) {\r\n                                return [2 /*return*/, Promise.resolve()];\r\n                            }\r\n                            this.csw = data;\r\n                        }\r\n                        return [4 /*yield*/, this.writeReg(util_1.apReg(addr, 0 /* WRITE */), data)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DAP.prototype.close = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.device.close()];\r\n            });\r\n        });\r\n    };\r\n    DAP.prototype.readRegRepeat = function (regId, cnt) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var request, sendargs, i, buf;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        util_1.assert(cnt <= 15);\r\n                        request = util_1.regRequest(regId);\r\n                        sendargs = [0, cnt];\r\n                        for (i = 0; i < cnt; ++i) {\r\n                            sendargs.push(request);\r\n                        }\r\n                        return [4 /*yield*/, this.dap.cmdNums(5 /* DAP_TRANSFER */, sendargs)];\r\n                    case 1:\r\n                        buf = _a.sent();\r\n                        if (buf[1] !== cnt) {\r\n                            throw new Error((\"(many) Bad #trans \" + buf[1]));\r\n                        }\r\n                        else if (buf[2] !== 1) {\r\n                            throw new Error((\"(many) Bad transfer status \" + buf[2]));\r\n                        }\r\n                        return [2 /*return*/, buf.slice(3, 3 + cnt * 4)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DAP.prototype.writeRegRepeat = function (regId, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var request, sendargs, buf;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        util_1.assert(data.length <= 15);\r\n                        request = util_1.regRequest(regId, true);\r\n                        sendargs = [0, data.length];\r\n                        data.forEach(function (d) {\r\n                            sendargs.push(request);\r\n                            util_1.addInt32(sendargs, d);\r\n                        });\r\n                        return [4 /*yield*/, this.dap.cmdNums(5 /* DAP_TRANSFER */, sendargs)];\r\n                    case 1:\r\n                        buf = _a.sent();\r\n                        if (buf[2] !== 1) {\r\n                            throw new Error((\"(many-wr) Bad transfer status \" + buf[2]));\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DAP.prototype.regOp = function (regId, val) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var request, sendargs, buf;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        request = util_1.regRequest(regId, val !== null);\r\n                        sendargs = [0, 1, request];\r\n                        if (val !== null) {\r\n                            util_1.addInt32(sendargs, val);\r\n                        }\r\n                        return [4 /*yield*/, this.dap.cmdNums(5 /* DAP_TRANSFER */, sendargs)];\r\n                    case 1:\r\n                        buf = _a.sent();\r\n                        if (buf[1] !== 1) {\r\n                            console.error(\"Make sure you have initialised the DAP connection.\");\r\n                            throw new Error((\"Bad #trans \" + buf[1]));\r\n                        }\r\n                        else if (buf[2] !== 1) {\r\n                            if (buf[2] === 2) {\r\n                                throw new Error((\"Transfer wait\"));\r\n                            }\r\n                            throw new Error((\"Bad transfer status \" + buf[2]));\r\n                        }\r\n                        return [2 /*return*/, buf];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return DAP;\r\n}());\r\nexports.DAP = DAP;\r\n//# sourceMappingURL=dap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dapjs/built/dap.js\n// module id = 3\n// module chunks = 0","import {CoreNames, CortexM, CortexReg, DAP, ISANames} from \"dapjs\";\nimport {FlashTarget, FlashTargets} from \"dapjs\";\nimport HID from \"webhid\";\n\nimport {PlatformSelector} from \"./device_selector\";\nimport HTMLLogger from \"./logger\";\n\ninterface IMachineState {\n    registers: number[];\n}\n\nconst arrToString = (arr: number[]) => {\n    let r = \"\";\n    for (let i = 0; i < arr.length; ++i) {\n        r += (\"0000\" + i).slice(-4) + \": \" + (\"00000000\" + (arr[i] >>> 0).toString(16)).slice(-8);\n\n        if (i !== arr.length - 1) {\n            r += \"\\n\";\n        }\n    }\n    return r;\n};\n\nconst machineStateToString = (s: IMachineState) => {\n    return \"REGS:\\n\" + arrToString(s.registers);\n};\n\nclass DAPDemo {\n    public target: FlashTarget;\n\n    private readonly selector: PlatformSelector;\n    private device: USBDevice;\n    private hid: HID;\n    private dapDevice: DAP;\n    private deviceCode: string;\n\n    private readonly chooseButton: HTMLButtonElement;\n    private readonly connectButton: HTMLButtonElement;\n    private readonly flashRedButton: HTMLButtonElement;\n    private readonly flashGreenButton: HTMLButtonElement;\n    private readonly printRegistersButton: HTMLButtonElement;\n    private readonly stepButton: HTMLButtonElement;\n    private readonly haltButton: HTMLButtonElement;\n    private readonly resumeButton: HTMLButtonElement;\n\n    private readonly logger: HTMLLogger;\n\n    constructor(logger: HTMLLogger) {\n        this.selector = new PlatformSelector(\"platform-chooser\", \"platform-detected\");\n\n        this.chooseButton = document.getElementById(\"choose\") as HTMLButtonElement;\n        this.connectButton = document.getElementById(\"connect\") as HTMLButtonElement;\n        this.flashRedButton = document.getElementById(\"flash-red\") as HTMLButtonElement;\n        this.flashGreenButton = document.getElementById(\"flash-green\") as HTMLButtonElement;\n        this.printRegistersButton = document.getElementById(\"registers\") as HTMLButtonElement;\n        this.stepButton = document.getElementById(\"step-instruction\") as HTMLButtonElement;\n        this.haltButton = document.getElementById(\"halt\") as HTMLButtonElement;\n        this.resumeButton = document.getElementById(\"resume\") as HTMLButtonElement;\n\n        this.chooseButton.onclick = this.choose;\n        this.connectButton.onclick = this.connect;\n        this.printRegistersButton.onclick = this.printRegisters;\n        this.stepButton.onclick = this.step;\n        this.haltButton.onclick = this.halt;\n        this.resumeButton.onclick = this.resume;\n\n        this.flashRedButton.onclick = async () => {\n            await this.flash(\"blinky-red.bin\");\n        }\n\n        this.flashGreenButton.onclick = async () => {\n            await this.flash(\"blinky-green.bin\");\n        }\n\n        this.logger = logger;\n    }\n\n    /**\n     * Define `choose` as ES6 arrow function so that `this` is bound to the instance of DAPDemo, rather than bound to\n     * the source of the click event.\n     */\n    private choose = async () => {\n        this.device = await navigator.usb.requestDevice({ filters: [{vendorId: 0x0d28}]});\n        this.deviceCode = this.device.serialNumber.slice(0, 4);\n\n        const info = await this.selector.lookupDevice(this.deviceCode);\n\n        this.selector.show(info);\n        this.selector.enable();\n\n        this.chooseButton.disabled = true;\n        this.connectButton.disabled = false;\n    }\n\n    /**\n     * Define `connect` as ES6 arrow function so that `this` is bound to the instance of DAPDemo, rather than bound to\n     * the source of the click event.\n     */\n    private connect = async () => {\n        this.hid = new HID(this.device);\n\n        this.log(\"Opening device.\");\n\n        // open hid device\n        await this.hid.open();\n\n        this.log(\"Device opened.\");\n\n        this.dapDevice = new DAP(this.hid);\n        this.target = new FlashTarget(this.dapDevice, FlashTargets.get(this.deviceCode));\n\n        this.log(\"Initialising device.\");\n\n        await this.target.init();\n\n        this.log(\"Halting target.\");\n\n        await this.target.halt();\n\n        this.log(\"Target halted.\");\n\n        const [imp, isa, type] = await this.target.readCoreType();\n        this.log(`Connected to an ARM ${CoreNames.get(type)} (${ISANames.get(isa)})`);\n\n        this.selector.disable();\n        this.connectButton.disabled = true;\n\n        const elements = Array.from(document.querySelectorAll(\".when-connected\"));\n\n        for (const elem of elements) {\n            (elem as HTMLButtonElement).disabled = false;\n        }\n    }\n\n    private flash = async (f: string) => {\n        // Erase flash\n        await this.target.halt();\n        await this.target.flashInit();\n        await this.target.eraseChip();\n\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", f, true);\n        xhr.responseType = \"arraybuffer\";\n\n        xhr.onload = async (e: any) => {\n            const array = new Uint32Array(xhr.response);\n\n            this.log(`Binary file ${array.length} words long`);\n\n            // Push binary to board\n            await this.target.flash(array);\n\n            this.log(`Successfully flashed binary.`);\n            this.log(\"Done.\");\n\n            await this.target.reset();\n\n            // make sure we don't have any issues flashing twice in the same session.\n            this.target.flashUnInit();\n        };\n\n        xhr.send();\n    }\n\n    private halt = async () => {\n        await this.target.halt();\n        this.log(\"Halted.\");\n    }\n\n    private resume = async () => {\n        await this.target.resume();\n        this.log(\"Resumed.\");\n    }\n\n    private log(s: string) {\n        this.logger.log(\"[demo] \" + s);\n    }\n\n    private clearLog() {\n        this.logger.clear();\n    }\n\n    private printRegisters = async () => {\n        const halt = false;\n\n        await this.target.halt();\n        const st = await this.snapshotMachineState();\n\n        this.clearLog();\n        this.log(machineStateToString(st));\n    }\n\n    private step = async () => {\n        await this.target.debug.step();\n        const st = await this.snapshotMachineState();\n\n        this.clearLog();\n        this.log(machineStateToString(st));\n    }\n\n    /**\n     * Snapshot the current state of the CPU. Reads all general-purpose registers, and returns them in an array.\n     */\n    private async snapshotMachineState() {\n        const state: IMachineState = {\n            registers: [],\n        };\n\n        for (let i = 0; i < 16; i++) {\n            state.registers[i] = await this.target.readCoreRegister(i);\n        }\n\n        return state;\n    }\n}\n\nwindow.onload = () => {\n    const logger = new HTMLLogger(\"#trace\");\n    const demo = new DAPDemo(logger);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar breakpoint_1 = require(\"./breakpoint\");\r\nvar Debug = (function () {\r\n    function Debug(core) {\r\n        this.core = core;\r\n        this.enabled = false;\r\n        this.availableHWBreakpoints = [];\r\n        this.breakpoints = new Map();\r\n    }\r\n    /**\r\n     * Set up (and disable) the Flash Patch & Breakpoint unit. It will be enabled when\r\n     * the first breakpoint is set.\r\n     *\r\n     * Also reads the number of available hardware breakpoints.\r\n     */\r\n    Debug.prototype.setupFpb = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var fpcr, nbCode, nbLit, i;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.core.memory.read32(3758104576 /* FP_CTRL */)];\r\n                    case 1:\r\n                        fpcr = _a.sent();\r\n                        nbCode = ((fpcr >> 8) & 0x70) | ((fpcr >> 4) & 0xf);\r\n                        nbLit = (fpcr >> 7) & 0xf;\r\n                        this.totalHWBreakpoints = nbCode;\r\n                        console.debug(nbCode + \" hardware breakpoints, \" + nbLit + \" literal comparators\");\r\n                        return [4 /*yield*/, this.setFpbEnabled(false)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        i = 0;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        if (!(i < nbCode)) return [3 /*break*/, 6];\r\n                        this.availableHWBreakpoints.push(3758104584 /* FP_COMP0 */ + (4 * i));\r\n                        return [4 /*yield*/, this.core.memory.write32(3758104584 /* FP_COMP0 */ + (i * 4), 0)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        i++;\r\n                        return [3 /*break*/, 3];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Enable or disable the Flash Patch and Breakpoint unit (FPB).\r\n     *\r\n     * @param enabled\r\n     */\r\n    Debug.prototype.setFpbEnabled = function (enabled) {\r\n        if (enabled === void 0) { enabled = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.enabled = enabled;\r\n                        return [4 /*yield*/, this.core.memory.write32(3758104576 /* FP_CTRL */, 2 /* FP_CTRL_KEY */ | (enabled ? 1 : 0))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Enable debugging on the target CPU\r\n     */\r\n    Debug.prototype.enable = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.core.memory.write32(3758157296 /* DHCSR */, -1604386816 /* DBGKEY */ | 1 /* C_DEBUGEN */)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Set breakpoints at specified memory addresses.\r\n     *\r\n     * @param addrs An array of memory addresses at which to set breakpoints.\r\n     */\r\n    Debug.prototype.setBreakpoint = function (addr) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var breakpoint, bkpt, regAddr;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.breakpoints.has(addr)) {\r\n                            breakpoint = this.breakpoints.get(addr);\r\n                            if (typeof breakpoint !== \"number\") {\r\n                                // already enabled\r\n                                console.warn(\"Breakpoint at \" + addr.toString(16) + \" already enabled.\");\r\n                                return [2 /*return*/];\r\n                            }\r\n                        }\r\n                        if (!(addr < 0x20000000)) return [3 /*break*/, 5];\r\n                        if (!(this.availableHWBreakpoints.length > 0)) return [3 /*break*/, 3];\r\n                        if (!!this.enabled) return [3 /*break*/, 2];\r\n                        console.log(\"enabling fpb\");\r\n                        return [4 /*yield*/, this.setFpbEnabled(true)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        regAddr = this.availableHWBreakpoints.pop();\r\n                        console.log(\"using regAddr=\" + regAddr.toString(16));\r\n                        bkpt = new breakpoint_1.HWBreakpoint(regAddr, this.core, addr);\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        bkpt = new breakpoint_1.SWBreakpoint(this.core, addr);\r\n                        _a.label = 4;\r\n                    case 4: return [3 /*break*/, 6];\r\n                    case 5:\r\n                        bkpt = new breakpoint_1.SWBreakpoint(this.core, addr);\r\n                        _a.label = 6;\r\n                    case 6: return [4 /*yield*/, bkpt.set()];\r\n                    case 7:\r\n                        _a.sent();\r\n                        this.breakpoints.set(addr, bkpt);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Debug.prototype.deleteBreakpoint = function (addr) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var bkpt;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.breakpoints.has(addr)) return [3 /*break*/, 3];\r\n                        bkpt = this.breakpoints.get(addr);\r\n                        if (!(typeof bkpt !== \"number\")) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, bkpt.clear()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        if (bkpt instanceof breakpoint_1.HWBreakpoint) {\r\n                            // return the register address to the pool\r\n                            this.availableHWBreakpoints.push(bkpt.regAddr);\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        this.breakpoints.delete(addr);\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        console.warn(\"Breakpoint at \" + addr.toString(16) + \" does not exist.\");\r\n                        _a.label = 4;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Step the processor forward by one instruction.\r\n     */\r\n    Debug.prototype.step = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var dhcsr, interruptsMasked;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.core.memory.read32(3758157296 /* DHCSR */)];\r\n                    case 1:\r\n                        dhcsr = _a.sent();\r\n                        if (!(dhcsr & (4 /* C_STEP */ | 2 /* C_HALT */))) {\r\n                            console.error(\"Target is not halted.\");\r\n                            return [2 /*return*/];\r\n                        }\r\n                        interruptsMasked = (8 /* C_MASKINTS */ & dhcsr) !== 0;\r\n                        if (!!interruptsMasked) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.core.memory.write32(3758157296 /* DHCSR */, -1604386816 /* DBGKEY */ |\r\n                                1 /* C_DEBUGEN */ |\r\n                                2 /* C_HALT */ |\r\n                                8 /* C_MASKINTS */)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3: return [4 /*yield*/, this.core.memory.write32(3758157296 /* DHCSR */, -1604386816 /* DBGKEY */ |\r\n                            1 /* C_DEBUGEN */ |\r\n                            8 /* C_MASKINTS */ |\r\n                            4 /* C_STEP */)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.core.waitForHalt()];\r\n                    case 5:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.core.memory.write32(3758157296 /* DHCSR */, -1604386816 /* DBGKEY */ |\r\n                                1 /* C_DEBUGEN */ |\r\n                                2 /* C_HALT */)];\r\n                    case 6:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Debug;\r\n}());\r\nexports.Debug = Debug;\r\n//# sourceMappingURL=debug.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dapjs/built/debug/debug.js\n// module id = 5\n// module chunks = 0","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar HWBreakpoint = (function () {\r\n    function HWBreakpoint(regAddr, parent, addr) {\r\n        this.regAddr = regAddr;\r\n        this.parent = parent;\r\n        this.addr = addr;\r\n    }\r\n    HWBreakpoint.prototype.set = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var bpMatch;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        bpMatch = ((this.addr & 0x2) ? 2 : 1) << 30;\r\n                        return [4 /*yield*/, this.parent.memory.write32(this.regAddr, this.addr & 0x1ffffffc | bpMatch | 1)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    HWBreakpoint.prototype.clear = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: \r\n                    /* clear hardware breakpoint */\r\n                    return [4 /*yield*/, this.parent.memory.write32(this.regAddr, 0)];\r\n                    case 1:\r\n                        /* clear hardware breakpoint */\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return HWBreakpoint;\r\n}());\r\nexports.HWBreakpoint = HWBreakpoint;\r\nvar SWBreakpoint = (function () {\r\n    function SWBreakpoint(parent, addr) {\r\n        this.parent = parent;\r\n        this.addr = addr;\r\n    }\r\n    SWBreakpoint.prototype.set = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        // read the instruction from the CPU... pleeeeease be in thumb mode\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.parent.memory.read16(this.addr)];\r\n                    case 1:\r\n                        // read the instruction from the CPU... pleeeeease be in thumb mode\r\n                        _a.instruction = _b.sent();\r\n                        return [4 /*yield*/, this.parent.memory.write16(this.addr, SWBreakpoint.BKPT_INSTRUCTION)];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SWBreakpoint.prototype.clear = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: \r\n                    /* clear hardware breakpoint */\r\n                    return [4 /*yield*/, this.parent.memory.write16(this.addr, this.instruction)];\r\n                    case 1:\r\n                        /* clear hardware breakpoint */\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SWBreakpoint.BKPT_INSTRUCTION = 0xbe00;\r\n    return SWBreakpoint;\r\n}());\r\nexports.SWBreakpoint = SWBreakpoint;\r\n//# sourceMappingURL=breakpoint.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dapjs/built/debug/breakpoint.js\n// module id = 6\n// module chunks = 0","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar util_1 = require(\"../util\");\r\nvar Memory = (function () {\r\n    function Memory(dev) {\r\n        this.dev = dev;\r\n    }\r\n    /**\r\n     * Write a 32-bit word to the specified (word-aligned) memory address.\r\n     *\r\n     * @param addr Memory address to write to\r\n     * @param data Data to write (values above 2**32 will be truncated)\r\n     */\r\n    Memory.prototype.write32 = function (addr, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.dev.writeAp(0 /* CSW */, 587202640 /* CSW_VALUE */ | 2 /* CSW_SIZE32 */)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.dev.writeAp(4 /* TAR */, addr)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.dev.writeAp(12 /* DRW */, data)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Write a 16-bit word to the specified (half word-aligned) memory address.\r\n     *\r\n     * @param addr Memory address to write to\r\n     * @param data Data to write (values above 2**16 will be truncated)\r\n     */\r\n    Memory.prototype.write16 = function (addr, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.dev.writeAp(0 /* CSW */, 587202640 /* CSW_VALUE */ | 1 /* CSW_SIZE16 */)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        data = data << ((addr & 0x02) << 3);\r\n                        return [4 /*yield*/, this.dev.writeAp(4 /* TAR */, addr)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.dev.writeAp(12 /* DRW */, data)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Read a 32-bit word from the specified (word-aligned) memory address.\r\n     *\r\n     * @param addr Memory address to read from.\r\n     */\r\n    Memory.prototype.read32 = function (addr) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.dev.writeAp(0 /* CSW */, 587202640 /* CSW_VALUE */ | 2 /* CSW_SIZE32 */)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.dev.writeAp(4 /* TAR */, addr)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 8]);\r\n                        return [4 /*yield*/, this.dev.readAp(12 /* DRW */)];\r\n                    case 4: return [2 /*return*/, _a.sent()];\r\n                    case 5:\r\n                        e_1 = _a.sent();\r\n                        // transfer wait, try again.\r\n                        return [4 /*yield*/, util_1.delay(100)];\r\n                    case 6:\r\n                        // transfer wait, try again.\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.read32(addr)];\r\n                    case 7: return [2 /*return*/, _a.sent()];\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Read a 16-bit word from the specified (half word-aligned) memory address.\r\n     *\r\n     * @param addr Memory address to read from.\r\n     */\r\n    Memory.prototype.read16 = function (addr) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var val, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.dev.writeAp(0 /* CSW */, 587202640 /* CSW_VALUE */ | 1 /* CSW_SIZE16 */)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.dev.writeAp(4 /* TAR */, addr)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 8]);\r\n                        return [4 /*yield*/, this.dev.readAp(12 /* DRW */)];\r\n                    case 4:\r\n                        val = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 5:\r\n                        e_2 = _a.sent();\r\n                        // transfer wait, try again.\r\n                        return [4 /*yield*/, util_1.delay(100)];\r\n                    case 6:\r\n                        // transfer wait, try again.\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.read16(addr)];\r\n                    case 7:\r\n                        val = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 8:\r\n                        val = (val >> ((addr & 0x02) << 3) & 0xffff);\r\n                        return [2 /*return*/, val];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Reads a block of memory from the specified memory address.\r\n     *\r\n     * @param addr Address to read from\r\n     * @param words Number of words to read\r\n     * @param pageSize Memory page size\r\n     */\r\n    Memory.prototype.readBlock = function (addr, words, pageSize) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            var funs, bufs, end, ptr, _loop_1, _i, funs_1, f, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        funs = [function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n                                return [2 /*return*/, Promise.resolve()];\r\n                            }); }); }];\r\n                        bufs = [];\r\n                        end = addr + words * 4;\r\n                        ptr = addr;\r\n                        _loop_1 = function () {\r\n                            var nextptr = ptr + pageSize;\r\n                            if (ptr === addr) {\r\n                                nextptr &= ~(pageSize - 1);\r\n                            }\r\n                            var len = Math.min(nextptr - ptr, end - ptr);\r\n                            var ptr0 = ptr;\r\n                            util_1.assert((len & 3) === 0);\r\n                            funs.push(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                var _a, _b;\r\n                                return __generator(this, function (_c) {\r\n                                    switch (_c.label) {\r\n                                        case 0:\r\n                                            _b = (_a = bufs).push;\r\n                                            return [4 /*yield*/, this.readBlockCore(ptr0, len >> 2)];\r\n                                        case 1:\r\n                                            _b.apply(_a, [_c.sent()]);\r\n                                            return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            }); });\r\n                            ptr = nextptr;\r\n                        };\r\n                        while (ptr < end) {\r\n                            _loop_1();\r\n                        }\r\n                        _i = 0, funs_1 = funs;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!(_i < funs_1.length)) return [3 /*break*/, 4];\r\n                        f = funs_1[_i];\r\n                        return [4 /*yield*/, f()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 4: return [4 /*yield*/, util_1.bufferConcat(bufs)];\r\n                    case 5:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result.slice(0, words * 4)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Write a block of memory to the specified memory address.\r\n     *\r\n     * @param addr Memory address to write to.\r\n     * @param words Array of 32-bit words to write to memory.\r\n     */\r\n    Memory.prototype.writeBlock = function (addr, words) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var blSz, i;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (words.length === 0) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        if (!(1 > 0)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.writeBlockCore(addr, words)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 2:\r\n                        blSz = 10;\r\n                        i = 0;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        if (!(i < Math.ceil(words.length / blSz))) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.writeBlockCore(addr + i * blSz * 4, words.slice(i * blSz, i * blSz + blSz))];\r\n                    case 4:\r\n                        _a.sent();\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        i++;\r\n                        return [3 /*break*/, 3];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Memory.prototype.readBlockCore = function (addr, words) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var lastSize, blocks, i, b;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.dev.writeAp(0 /* CSW */, 587202640 /* CSW_VALUE */ | 2 /* CSW_SIZE32 */)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.dev.writeAp(4 /* TAR */, addr)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        lastSize = words % 15;\r\n                        if (lastSize === 0) {\r\n                            lastSize = 15;\r\n                        }\r\n                        blocks = [];\r\n                        i = 0;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        if (!(i < Math.ceil(words / 15))) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.dev.readRegRepeat(util_1.apReg(12 /* DRW */, 2 /* READ */), i === blocks.length - 1 ? lastSize : 15)];\r\n                    case 4:\r\n                        b = _a.sent();\r\n                        blocks.push(b);\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        i++;\r\n                        return [3 /*break*/, 3];\r\n                    case 6: return [2 /*return*/, util_1.bufferConcat(blocks)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Memory.prototype.writeBlockCore = function (addr, words) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var blSz, reg, i, e_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 7, , 12]);\r\n                        return [4 /*yield*/, this.dev.writeAp(0 /* CSW */, 587202640 /* CSW_VALUE */ | 2 /* CSW_SIZE32 */)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.dev.writeAp(4 /* TAR */, addr)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        blSz = 12;\r\n                        reg = util_1.apReg(12 /* DRW */, 0 /* WRITE */);\r\n                        i = 0;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        if (!(i < Math.ceil(words.length / blSz))) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.dev.writeRegRepeat(reg, words.slice(i * blSz, i * blSz + blSz))];\r\n                    case 4:\r\n                        _a.sent();\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        i++;\r\n                        return [3 /*break*/, 3];\r\n                    case 6: return [3 /*break*/, 12];\r\n                    case 7:\r\n                        e_3 = _a.sent();\r\n                        if (!e_3.dapWait) return [3 /*break*/, 10];\r\n                        console.debug(\"transfer wait, write block\");\r\n                        return [4 /*yield*/, util_1.delay(100)];\r\n                    case 8:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.writeBlockCore(addr, words)];\r\n                    case 9: return [2 /*return*/, _a.sent()];\r\n                    case 10: throw e_3;\r\n                    case 11: return [3 /*break*/, 12];\r\n                    case 12: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Memory;\r\n}());\r\nexports.Memory = Memory;\r\n//# sourceMappingURL=memory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dapjs/built/core/memory.js\n// module id = 7\n// module chunks = 0","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar util_1 = require(\"../util\");\r\nvar CMSISDAP = (function () {\r\n    function CMSISDAP(hid) {\r\n        this.maxSent = 1;\r\n        this.hid = hid;\r\n    }\r\n    CMSISDAP.prototype.resetTarget = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.cmdNums(10 /* DAP_RESET_TARGET */, [])];\r\n            });\r\n        });\r\n    };\r\n    CMSISDAP.prototype.disconnect = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.cmdNums(3 /* DAP_DISCONNECT */, [])];\r\n            });\r\n        });\r\n    };\r\n    CMSISDAP.prototype.cmdNums = function (op, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var buf;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        data.unshift(op);\r\n                        return [4 /*yield*/, this.send(data)];\r\n                    case 1:\r\n                        buf = _a.sent();\r\n                        if (buf[0] !== op) {\r\n                            throw new Error(\"Bad response for \" + op + \" -> \" + buf[0]);\r\n                        }\r\n                        switch (op) {\r\n                            case 2 /* DAP_CONNECT */:\r\n                            case 0 /* DAP_INFO */:\r\n                            case 5 /* DAP_TRANSFER */:\r\n                                break;\r\n                            default:\r\n                                if (buf[1] !== 0) {\r\n                                    throw new Error(\"Bad status for \" + op + \" -> \" + buf[1]);\r\n                                }\r\n                        }\r\n                        return [2 /*return*/, buf];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    CMSISDAP.prototype.connect = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var v, buf;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        console.log(\"Connecting...\");\r\n                        return [4 /*yield*/, this.info(254 /* PACKET_COUNT */)];\r\n                    case 1:\r\n                        v = _a.sent();\r\n                        if (v) {\r\n                            this.maxSent = v;\r\n                        }\r\n                        else {\r\n                            throw new Error(\"DAP_INFO returned invalid packet count.\");\r\n                        }\r\n                        return [4 /*yield*/, this.cmdNums(17 /* DAP_SWJ_CLOCK */, util_1.addInt32(null, 1000000))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.cmdNums(2 /* DAP_CONNECT */, [0])];\r\n                    case 3:\r\n                        buf = _a.sent();\r\n                        if (buf[1] !== 1) {\r\n                            throw new Error(\"SWD mode not enabled.\");\r\n                        }\r\n                        return [4 /*yield*/, this.cmdNums(17 /* DAP_SWJ_CLOCK */, util_1.addInt32(null, 1000000))];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.cmdNums(4 /* DAP_TRANSFER_CONFIGURE */, [0, 0x50, 0, 0, 0])];\r\n                    case 5:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.cmdNums(19 /* DAP_SWD_CONFIGURE */, [0])];\r\n                    case 6:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.jtagToSwd()];\r\n                    case 7:\r\n                        _a.sent();\r\n                        console.log(\"Connected\");\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    CMSISDAP.prototype.jtagToSwd = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var arrs, _i, arrs_1, arr;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        arrs = [\r\n                            [56, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff],\r\n                            [16, 0x9e, 0xe7],\r\n                            [56, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff],\r\n                            [8, 0x00],\r\n                        ];\r\n                        _i = 0, arrs_1 = arrs;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        if (!(_i < arrs_1.length)) return [3 /*break*/, 4];\r\n                        arr = arrs_1[_i];\r\n                        return [4 /*yield*/, this.swjSequence(arr)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _i++;\r\n                        return [3 /*break*/, 1];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    CMSISDAP.prototype.swjSequence = function (data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.cmdNums(18 /* DAP_SWJ_SEQUENCE */, data)];\r\n            });\r\n        });\r\n    };\r\n    CMSISDAP.prototype.info = function (id) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var buf;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.cmdNums(0 /* DAP_INFO */, [id])];\r\n                    case 1:\r\n                        buf = _a.sent();\r\n                        if (buf[1] === 0) {\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        switch (id) {\r\n                            case 240 /* CAPABILITIES */:\r\n                            case 254 /* PACKET_COUNT */:\r\n                            case 255 /* PACKET_SIZE */:\r\n                                if (buf[1] === 1) {\r\n                                    return [2 /*return*/, buf[2]];\r\n                                }\r\n                                else if (buf[1] === 2) {\r\n                                    return [2 /*return*/, buf[3] << 8 | buf[2]];\r\n                                }\r\n                        }\r\n                        return [2 /*return*/, buf.slice(2, buf[1] + 2 - 1)]; // .toString(\"utf8\")\r\n                }\r\n            });\r\n        });\r\n    };\r\n    CMSISDAP.prototype.send = function (command) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var array, response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        array = Uint8Array.from(command);\r\n                        return [4 /*yield*/, this.hid.write(array.buffer)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.hid.read()];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [2 /*return*/, new Uint8Array(response.buffer)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return CMSISDAP;\r\n}());\r\nexports.CMSISDAP = CMSISDAP;\r\n//# sourceMappingURL=cmsis_dap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dapjs/built/transport/cmsis_dap.js\n// module id = 8\n// module chunks = 0","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar cortex_m_1 = require(\"../core/cortex_m\");\r\nvar K64F_1 = require(\"./K64F\");\r\nvar NRF51_1 = require(\"./NRF51\");\r\nvar analyzer = new Uint32Array([\r\n    0x2180468c, 0x2600b5f0, 0x4f2c2501, 0x447f4c2c, 0x1c2b0049, 0x425b4033, 0x40230872, 0x085a4053,\r\n    0x425b402b, 0x40534023, 0x402b085a, 0x4023425b, 0x085a4053, 0x425b402b, 0x40534023, 0x402b085a,\r\n    0x4023425b, 0x085a4053, 0x425b402b, 0x40534023, 0x402b085a, 0x4023425b, 0x085a4053, 0x425b402b,\r\n    0x40534023, 0xc7083601, 0xd1d2428e, 0x2b004663, 0x4663d01f, 0x46b4009e, 0x24ff2701, 0x44844d11,\r\n    0x1c3a447d, 0x88418803, 0x4351409a, 0xd0122a00, 0x22011856, 0x780b4252, 0x40533101, 0x009b4023,\r\n    0x0a12595b, 0x42b1405a, 0x43d2d1f5, 0x4560c004, 0x2000d1e7, 0x2200bdf0, 0x46c0e7f8, 0x000000b6,\r\n    0xedb88320, 0x00000044,\r\n]);\r\nvar FlashTarget = (function (_super) {\r\n    __extends(FlashTarget, _super);\r\n    function FlashTarget(device, platform) {\r\n        var _this = _super.call(this, device) || this;\r\n        _this.platform = platform;\r\n        _this.inited = false;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Initialise the flash driver on the chip. Must be called before any of the other\r\n     * flash-related methods.\r\n     */\r\n    FlashTarget.prototype.flashInit = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.inited) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // reset and halt\r\n                        return [4 /*yield*/, this.reset(true)];\r\n                    case 1:\r\n                        // reset and halt\r\n                        _a.sent();\r\n                        // make sure we're in Thumb mode.\r\n                        return [4 /*yield*/, this.writeCoreRegister(16 /* XPSR */, 1 << 24)];\r\n                    case 2:\r\n                        // make sure we're in Thumb mode.\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.writeCoreRegister(9 /* R9 */, this.platform.flashAlgo.staticBase)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        // upload analyzer\r\n                        return [4 /*yield*/, this.memory.writeBlock(0x1ffff000, analyzer)];\r\n                    case 4:\r\n                        // upload analyzer\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.runCode(this.platform.flashAlgo.instructions, this.platform.flashAlgo.loadAddress, this.platform.flashAlgo.pcInit, this.platform.flashAlgo.loadAddress + 1, this.platform.flashAlgo.stackPointer, true, 0, 0, 0, 0)];\r\n                    case 5:\r\n                        result = _a.sent();\r\n                        this.inited = true;\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Erase _all_ data stored in flash on the chip.\r\n     */\r\n    FlashTarget.prototype.eraseChip = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this.inited) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.flashInit()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [4 /*yield*/, this.runCode(this.platform.flashAlgo.instructions, this.platform.flashAlgo.loadAddress, this.platform.flashAlgo.pcEraseAll, this.platform.flashAlgo.loadAddress + 1, this.platform.flashAlgo.stackPointer, false, 0, 0, 0)];\r\n                    case 3:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Upload a program to flash memory on the chip.\r\n     * TODO: add a callback to provide progress data\r\n     *\r\n     * @param data Array of 32-bit integers to write to flash.\r\n     */\r\n    FlashTarget.prototype.flash = function (data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pageSizeWords, bufferAddress, ptr, wordPtr, pageData, flashAddress;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!!this.inited) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.flashInit()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [4 /*yield*/, this.halt()];\r\n                    case 3:\r\n                        _a.sent();\r\n                        pageSizeWords = this.platform.flashAlgo.pageSize / 4;\r\n                        bufferAddress = this.platform.flashAlgo.pageBuffers[0];\r\n                        ptr = 0;\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        if (!(ptr < data.byteLength)) return [3 /*break*/, 7];\r\n                        wordPtr = ptr / 4;\r\n                        pageData = data.slice(wordPtr, wordPtr + pageSizeWords);\r\n                        flashAddress = this.platform.flashAlgo.flashStart + ptr;\r\n                        this.platform.overrideSecurityBits(flashAddress, pageData);\r\n                        return [4 /*yield*/, this.memory.writeBlock(bufferAddress, pageData)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.runCode(this.platform.flashAlgo.instructions, this.platform.flashAlgo.loadAddress, this.platform.flashAlgo.pcProgramPage, // pc\r\n                            this.platform.flashAlgo.loadAddress + 1, // lr\r\n                            this.platform.flashAlgo.stackPointer, // sp\r\n                            /* upload? */\r\n                            ptr === 0, \r\n                            /* args */\r\n                            flashAddress, this.platform.flashAlgo.pageSize, bufferAddress)];\r\n                    case 6:\r\n                        _a.sent();\r\n                        console.log(\"written 0x\" + pageData.byteLength.toString(16) + \" bytes to 0x\" + flashAddress.toString(16));\r\n                        ptr += pageData.byteLength;\r\n                        return [3 /*break*/, 4];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FlashTarget.prototype.flashUnInit = function () {\r\n        this.inited = false;\r\n    };\r\n    return FlashTarget;\r\n}(cortex_m_1.CortexM));\r\nexports.FlashTarget = FlashTarget;\r\nexports.FlashTargets = new Map();\r\nexports.FlashTargets.set(\"0240\", new K64F_1.K64F());\r\nexports.FlashTargets.set(\"9900\", new NRF51_1.NRF51());\r\n//# sourceMappingURL=FlashTarget.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dapjs/built/targets/FlashTarget.js\n// module id = 9\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar K64F_FLASH_ALGO = {\r\n    flashSize: 0x100000,\r\n    flashStart: 0x0,\r\n    // Flash algorithm as a hex string\r\n    instructions: new Uint32Array([\r\n        0xE00ABE00, 0x062D780D, 0x24084068, 0xD3000040, 0x1E644058, 0x1C49D1FA, 0x2A001E52, 0x4770D1F2,\r\n        0x4604b570, 0x4616460d, 0x5020f24c, 0x81c84932, 0x1028f64d, 0x460881c8, 0xf0208800, 0x80080001,\r\n        0x4448482e, 0xf8dcf000, 0x2001b108, 0x2000bd70, 0x4601e7fc, 0x47702000, 0x4929b510, 0x44484827,\r\n        0xf8b8f000, 0xb92c4604, 0x48242100, 0xf0004448, 0x4604f9a9, 0xf837f000, 0xbd104620, 0x4604b570,\r\n        0x4448481e, 0x46214b1e, 0xf00068c2, 0x4605f85d, 0x481ab93d, 0x23004448, 0x68c24621, 0xf946f000,\r\n        0xf0004605, 0x4628f820, 0xb5febd70, 0x460c4605, 0x46234616, 0x46294632, 0x44484810, 0xf8f8f000,\r\n        0xb9674607, 0x22012000, 0x2000e9cd, 0x46224633, 0x90024629, 0x44484809, 0xf984f000, 0xf0004607,\r\n        0x4638f802, 0x4807bdfe, 0xf4206840, 0xf5000070, 0x49040070, 0x47706048, 0x40052000, 0x00000004,\r\n        0x6b65666b, 0x4001f000, 0x4a0e2070, 0x20807010, 0xbf007010, 0x7800480b, 0x280009c0, 0x4809d0fa,\r\n        0xf0017801, 0xb1080020, 0x47702067, 0x0010f001, 0x2068b108, 0xf001e7f9, 0xb1080001, 0xe7f42069,\r\n        0xe7f22000, 0x40020000, 0x4df0e92d, 0x460d4604, 0x469a4690, 0xf0004650, 0x4606f891, 0x4630b116,\r\n        0x8df0e8bd, 0x46422310, 0x46204629, 0xf86cf000, 0xb10e4606, 0xe7f34630, 0x0008eb05, 0x68e01e47,\r\n        0xf1f0fbb7, 0x7011fb00, 0x68e0b140, 0xf0f0fbb7, 0x0b01f100, 0xfb0068e0, 0x1e47f00b, 0x480be011,\r\n        0x68004478, 0x20096005, 0x71c84909, 0xffacf7ff, 0x69a04606, 0x69a0b108, 0xb1064780, 0x68e0e003,\r\n        0x42bd4405, 0xbf00d9eb, 0xe7c94630, 0x000002ec, 0x40020000, 0x4604b570, 0x4628460d, 0xf84ef000,\r\n        0xb10e4606, 0xbd704630, 0x2004b90c, 0x2044e7fb, 0x71c84902, 0xff88f7ff, 0x0000e7f5, 0x40020000,\r\n        0xb9094601, 0x47702004, 0x6cc04826, 0x6003f3c0, 0x447b4b25, 0x0010f833, 0xb90a0302, 0xe7f22064,\r\n        0x60082000, 0x2002604a, 0x02c06088, 0x200060c8, 0x61486108, 0xbf006188, 0x4602e7e5, 0x2004b90a,\r\n        0x61914770, 0xe7fb2000, 0x4604b530, 0x2004b90c, 0x1e58bd30, 0xb9104008, 0x40101e58, 0x2065b108,\r\n        0x6820e7f6, 0xd8054288, 0x0500e9d4, 0x188d4428, 0xd20142a8, 0xe7eb2066, 0xe7e92000, 0x480b4601,\r\n        0xd0014281, 0x4770206b, 0xe7fc2000, 0xb90b4603, 0x47702004, 0xd801290f, 0xd0012a04, 0xe7f82004,\r\n        0xe7f62000, 0x40048000, 0x0000025a, 0x6b65666b, 0x41f0e92d, 0x46884607, 0x461d4614, 0x2004b914,\r\n        0x81f0e8bd, 0x462a2308, 0x46384641, 0xffbcf7ff, 0xb10e4606, 0xe7f34630, 0x4812e01f, 0x68004478,\r\n        0x8000f8c0, 0x490fcc01, 0x390c4479, 0x60486809, 0x490ccc01, 0x39184479, 0x60886809, 0x490a2007,\r\n        0xf7ff71c8, 0x4606ff01, 0xb10869b8, 0x478069b8, 0xe004b106, 0x0808f108, 0x2d003d08, 0xbf00d1dd,\r\n        0xe7cd4630, 0x000001b0, 0x40020000, 0x4dffe92d, 0x4682b082, 0x2310460c, 0x46504621, 0xf7ff9a04,\r\n        0x4683ff83, 0x0f00f1bb, 0x4658d003, 0xe8bdb006, 0xe9da8df0, 0xfbb00101, 0x4260f7f1, 0x40084279,\r\n        0x42a54245, 0x443dd100, 0xe0229e04, 0x0804eba5, 0xd90045b0, 0xea4f46b0, 0x90011018, 0x4478480f,\r\n        0x60046800, 0x490e2001, 0x980171c8, 0x72c80a00, 0x72889801, 0x72489805, 0xfeb6f7ff, 0xf1bb4683,\r\n        0xd0010f00, 0xe7d14658, 0x0608eba6, 0x443d4444, 0x2e00bf00, 0x2000d1da, 0x0000e7c8, 0x0000010e,\r\n        0x40020000, 0x4604b570, 0xb90c460d, 0xbd702004, 0x49032040, 0x460871c8, 0xf7ff7185, 0xe7f6fe95,\r\n        0x40020000, 0x4dffe92d, 0x4617460c, 0xe9dd461d, 0xf8ddb80c, 0xb91da038, 0xb0042004, 0x8df0e8bd,\r\n        0x463a2304, 0x98004621, 0xff1ef7ff, 0xb10e4606, 0xe7f24630, 0x4814e022, 0x68004478, 0x20026004,\r\n        0x71c84912, 0xf8804608, 0x490fb00b, 0x39144479, 0x68096828, 0xf7ff6088, 0x4606fe67, 0xf1b8b15e,\r\n        0xd0010f00, 0x4000f8c8, 0x0f00f1ba, 0x2000d002, 0x0000f8ca, 0x1f3fe004, 0x1d241d2d, 0xd1da2f00,\r\n        0x4630bf00, 0x0000e7c9, 0x00000074, 0x40020000, 0x00000000, 0x00080000, 0x00100000, 0x00200000,\r\n        0x00400000, 0x00800000, 0x01000000, 0x01000000, 0x40020004, 0x00000000,\r\n    ]),\r\n    loadAddress: 0x20000000,\r\n    pageBuffers: [0x20003000, 0x20004000],\r\n    pageSize: 0x1000,\r\n    // Relative function addresses\r\n    pcEraseAll: 0x20000059,\r\n    pcEraseSector: 0x2000007D,\r\n    pcInit: 0x20000021,\r\n    // pcUnInit: 0x49,\r\n    pcProgramPage: 0x200000AB,\r\n    stackPointer: 0x20001000,\r\n    staticBase: 0x20000000 + 0x20 + 0x474,\r\n};\r\nvar K64F = (function () {\r\n    function K64F() {\r\n        this.flashAlgo = K64F_FLASH_ALGO;\r\n    }\r\n    K64F.prototype.init = function () {\r\n        // do some stuff with mdm-ap to make sure debugging is all enabled etc.\r\n    };\r\n    K64F.prototype.overrideSecurityBits = function (address, data) {\r\n        var u8data = new Uint8Array(data.buffer);\r\n        // Kinetis security values and addresses\r\n        var SECURITY_START = 0x400;\r\n        var SECURITY_SIZE = 16;\r\n        var FPROT_ADDR = 0x408;\r\n        var FPROT_ADDR_END = 0x40c;\r\n        var FPROT_SIZE = 4;\r\n        var FSEC_ADDR = 0x40c;\r\n        var FSEC_VAL = 0xFE;\r\n        var FOPT_ADDR = 0x40d;\r\n        var FOPT_VAL = 0xFF;\r\n        var FEPROT_ADDR = 0x40e;\r\n        var FEPROT_VAL = 0xFF;\r\n        var FDPROT_ADDR = 0x40f;\r\n        var FDPROT_VAL = 0xFF;\r\n        if (address <= SECURITY_START && address + u8data.byteLength > SECURITY_START + SECURITY_SIZE) {\r\n            console.log(u8data.slice(0x400, 0x40f));\r\n            for (var i = FPROT_ADDR; i < FPROT_ADDR_END; i++) {\r\n                if (u8data[i - address] !== 0xff) {\r\n                    u8data[i - address] = 0xff;\r\n                    console.debug(\"FCF[\" + (i - FPROT_ADDR) + \"] at addr \" + i + \" changed to \" + u8data[i - address]);\r\n                }\r\n            }\r\n            if (u8data[FSEC_ADDR - address] !== FSEC_VAL) {\r\n                u8data[FSEC_ADDR - address] = FSEC_VAL;\r\n                console.debug(\"FSEC at addr \" + FSEC_ADDR + \" changed to \" + FSEC_VAL);\r\n            }\r\n            if (u8data[FOPT_ADDR - address] === 0x00) {\r\n                console.debug(\"FOPT set to restricted value 0x00\");\r\n            }\r\n            if (u8data[FEPROT_ADDR - address] !== FEPROT_VAL) {\r\n                u8data[FEPROT_ADDR - address] = FEPROT_VAL;\r\n                console.debug(\"FEPROT at addr \" + FEPROT_ADDR + \" changed to \" + FEPROT_VAL);\r\n            }\r\n            if (u8data[FDPROT_ADDR - address] !== FDPROT_VAL) {\r\n                u8data[FDPROT_ADDR - address] = FDPROT_VAL;\r\n                console.debug(\"FDPROT at addr \" + FDPROT_ADDR + \" changed to \" + FDPROT_VAL);\r\n            }\r\n        }\r\n    };\r\n    return K64F;\r\n}());\r\nexports.K64F = K64F;\r\n//# sourceMappingURL=K64F.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dapjs/built/targets/K64F.js\n// module id = 10\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar NRF51_FLASH_ALGO = {\r\n    analyzerAddress: 0x20003000,\r\n    analyzerSupported: true,\r\n    beginData: 0x20002000,\r\n    flashSize: 0x40000,\r\n    flashStart: 0x0,\r\n    instructions: new Uint32Array([\r\n        0xE00ABE00, 0x062D780D, 0x24084068, 0xD3000040, 0x1E644058, 0x1C49D1FA, 0x2A001E52, 0x4770D1F2,\r\n        0x47702000, 0x47702000, 0x4c26b570, 0x60602002, 0x60e02001, 0x68284d24, 0xd00207c0, 0x60602000,\r\n        0xf000bd70, 0xe7f6f82c, 0x4c1eb570, 0x60612102, 0x4288491e, 0x2001d302, 0xe0006160, 0x4d1a60a0,\r\n        0xf81df000, 0x07c06828, 0x2000d0fa, 0xbd706060, 0x4605b5f8, 0x4813088e, 0x46142101, 0x4f126041,\r\n        0xc501cc01, 0x07c06838, 0x1e76d006, 0x480dd1f8, 0x60412100, 0xbdf84608, 0xf801f000, 0x480ce7f2,\r\n        0x06006840, 0xd00b0e00, 0x6849490a, 0xd0072900, 0x4a0a4909, 0xd00007c3, 0x1d09600a, 0xd1f90840,\r\n        0x00004770, 0x4001e500, 0x4001e400, 0x10001000, 0x40010400, 0x40010500, 0x40010600, 0x6e524635,\r\n        0x00000000,\r\n    ]),\r\n    loadAddress: 0x20000000,\r\n    minProgramLength: 4,\r\n    pageBuffers: [0x20002000, 0x20002400],\r\n    pageSize: 0x400,\r\n    pcEraseAll: 0x20000029,\r\n    pcEraseSector: 0x20000049,\r\n    pcInit: 0x20000021,\r\n    pcProgramPage: 0x20000071,\r\n    stackPointer: 0x20001000,\r\n    staticBase: 0x20000170,\r\n};\r\nvar NRF51 = (function () {\r\n    function NRF51() {\r\n        this.flashAlgo = NRF51_FLASH_ALGO;\r\n    }\r\n    NRF51.prototype.overrideSecurityBits = function (address, data) {\r\n        /* empty */\r\n    };\r\n    return NRF51;\r\n}());\r\nexports.NRF51 = NRF51;\r\n//# sourceMappingURL=NRF51.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../dapjs/built/targets/NRF51.js\n// module id = 11\n// module chunks = 0","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction bufferExtend(source, length) {\n    var sarr = new Uint8Array(source);\n    var dest = new ArrayBuffer(length);\n    var darr = new Uint8Array(dest);\n    for (var i = 0; i < Math.min(source.byteLength, length); i++) {\n        darr[i] = sarr[i];\n    }\n    return dest;\n}\nvar HID = (function () {\n    function HID(device) {\n        this.device = device;\n    }\n    HID.prototype.open = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var hids, _i, _a, endpoint;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.device.open()];\n                    case 1:\n                        _b.sent();\n                        return [4 /*yield*/, this.device.selectConfiguration(1)];\n                    case 2:\n                        _b.sent();\n                        hids = this.device.configuration.interfaces.filter(function (intf) { return intf.alternates[0].interfaceClass == 0x03; });\n                        if (hids.length == 0) {\n                            throw 'No HID interfaces found.';\n                        }\n                        this.interfaces = hids;\n                        if (this.interfaces.length == 1) {\n                            this.interface = this.interfaces[0];\n                        }\n                        return [4 /*yield*/, this.device.claimInterface(this.interface.interfaceNumber)];\n                    case 3:\n                        _b.sent();\n                        this.endpoints = this.interface.alternates[0].endpoints;\n                        this.ep_in = null;\n                        this.ep_out = null;\n                        for (_i = 0, _a = this.endpoints; _i < _a.length; _i++) {\n                            endpoint = _a[_i];\n                            if (endpoint.direction == 'in') {\n                                this.ep_in = endpoint;\n                            }\n                            else {\n                                this.ep_out = endpoint;\n                            }\n                        }\n                        if (this.ep_in == null || this.ep_out == null) {\n                            console.log('Unable to find an in and an out endpoint.');\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    HID.prototype.close = function () {\n        return this.device.close();\n    };\n    HID.prototype.write = function (data) {\n        var report_size = this.ep_out.packetSize;\n        var buffer = bufferExtend(data, report_size);\n        return this.device.transferOut(this.ep_out.endpointNumber, buffer);\n    };\n    HID.prototype.read = function () {\n        var report_size = this.ep_in.packetSize;\n        return this.device.transferIn(this.ep_in.endpointNumber, report_size)\n            .then(function (res) { return res.data; });\n    };\n    return HID;\n}());\nexports.default = HID;\n//# sourceMappingURL=hid.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/webhid/bin/hid.js\n// module id = 12\n// module chunks = 0","\nexport interface IPlatform {\n    name: string;\n    productCode: string;\n}\n\nexport class PlatformSelector {\n    private deviceCache: Map<string, IPlatform>;\n    private element: HTMLSelectElement;\n    private deviceElement: HTMLElement;\n\n    constructor(id: string, devices: string) {\n        const elem = document.getElementById(id);\n        this.deviceElement = document.getElementById(devices);\n\n        if (elem.nodeName === \"SELECT\") {\n            this.element = elem as HTMLSelectElement;\n        } else {\n            console.log(elem.nodeName);\n            throw new Error(\"select element must be chosen\");\n        }\n\n        this.deviceCache = new Map<string, IPlatform>();\n    }\n\n    public show(platform: IPlatform) {\n        this.deviceElement.innerHTML =\n            `<option value='${platform.productCode}' id='${platform.productCode}'>${platform.name}</option>`;\n        this.element.value = platform.productCode;\n    }\n\n    public enable() {\n        this.element.disabled = false;\n    }\n\n    public disable() {\n        this.element.disabled = true;\n    }\n\n    public async lookupDevice(code: string) {\n        if (this.deviceCache.has(code)) {\n            return this.deviceCache.get(code);\n        }\n\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"get\", `https://developer.mbed.org/api/v3/platforms/${code}`, true);\n        xhr.responseType = \"json\";\n\n        return new Promise<IPlatform>((resolve, reject) => {\n            xhr.onload = (e: any) => {\n                const device = {\n                    name: xhr.response.name,\n                    productCode: xhr.response.productcode,\n                };\n                this.deviceCache.set(code, device);\n\n                resolve(device);\n            };\n            xhr.send();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/device_selector.ts","\nexport default class HTMLLogger {\n    private element: Element;\n\n    constructor(selector: string) {\n        this.element = document.querySelector(selector);\n    }\n\n    public log(data: string) {\n        this.element.innerHTML = this.element.innerHTML + data + \"\\n\";\n    }\n\n    public clear() {\n        this.element.innerHTML = \"\";\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/logger.ts"],"sourceRoot":""}